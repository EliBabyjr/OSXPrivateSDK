//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "NSWindowDelegate.h"
#import "NSWindowRestoration.h"
#import "SSAddressResolutionObserver.h"
#import "SSConnectionProgressViewControllerDelegate.h"
#import "SSConnectionPromptObserver.h"
#import "SSCredentialsRequester.h"
#import "SSCurtainMessageViewControllerDelegate.h"
#import "SSFrameBufferViewDelegate.h"
#import "SSSessionDelegate.h"
#import "SSSessionSelectViewControllerDelegate.h"

@class NSArray, NSCursor, NSDate, NSImage, NSMutableArray, NSMutableOrderedSet, NSOrderedSet, NSShadow, NSString, NSTimer, NSToolbar, SSBorderView, SSConnectionProgressViewController, SSConnectionWindowController, SSCredentials, SSCurtainMessageViewController, SSFadeView, SSFrameBufferView, SSNewConnectionViewController, SSPanningScrollView, SSScreenInfo, SSSession, SSSessionSelectViewController, SSUDPSocketAddress;

@interface SSSessionView : NSView <SSSessionDelegate, SSFrameBufferViewDelegate, SSConnectionProgressViewControllerDelegate, SSSessionSelectViewControllerDelegate, SSAddressResolutionObserver, SSConnectionPromptObserver, SSCredentialsRequester, SSCurtainMessageViewControllerDelegate, NSWindowDelegate, NSWindowRestoration>
{
    double _borderSpacing;
    double _borderWidth;
    struct CGColor *_borderColor;
    NSShadow *_borderShadow;
    BOOL _curtained;
    BOOL _shouldShowCursorForUnknownCursorState;
    BOOL _fillsWindow;
    BOOL _shouldSharePasteboard;
    BOOL _allowsFileTransferToRemote;
    BOOL _allowsFileTransferFromRemote;
    BOOL allowsSSHTunnelForLegacyVNC;
    BOOL shouldWarnUserForUnencryptedLegacyVNC;
    BOOL hasEntireScreen;
    BOOL isOffConsole;
    BOOL showingFullScreenMenuBar;
    BOOL simulatingLiveResize;
    BOOL isUsingVirtualDisplay;
    BOOL clientChangedCurtainMode;
    BOOL userEndedConnection;
    BOOL shouldNotifyOfVirtualDisplayStateChange;
    BOOL shouldNotifyOfFailureToEnterCurtainMode;
    BOOL shouldNotifyOfFailureToExitCurtainMode;
    BOOL userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC;
    BOOL animatingResize;
    BOOL switchedDisplay;
    BOOL toolbarVisibilityBeforeEnteringFullScreen;
    BOOL changingFullScreenMode;
    BOOL _hasUnknownCursorState;
    BOOL _canToggleCurtainMode;
    int _controlMode;
    int sessionState;
    int chosenSessionSelectionAction;
    NSCursor *_observeCursor;
    NSCursor *_controlCursor;
    id <SSSessionFileTransferDelegate> _fileTransferDelegate;
    SSSession *session;
    SSFrameBufferView *frameBufferView;
    SSPanningScrollView *scrollView;
    SSFadeView *reconnectOverlay;
    SSConnectionWindowController *connectionWindowController;
    SSSessionSelectViewController *sessionSelectViewController;
    SSConnectionProgressViewController *connectionProgressViewController;
    SSNewConnectionViewController *addressGatheringConnectionViewController;
    NSArray *displayedOverlayNotifications;
    struct OpaqueEventHandlerRef *menuAutoShowEventHandler;
    NSString *currentConsoleUser;
    NSString *requestConsoleCommand;
    SSCredentials *cachedCredentials;
    NSDate *resolveStartTime;
    NSString *bonjourDisplayName;
    NSArray *resolvedAddresses;
    NSString *userEnteredAddressString;
    NSString *cachedURL;
    NSMutableArray *attemptedAuthTypes;
    NSString *kerberosClientPrincipal;
    NSString *lastRetainedKerberosClientPrincipal;
    unsigned long long windowStyleMaskBeforeEnteringFullScreen;
    NSToolbar *windowToolbarBeforeEnteringFullScreen;
    NSTimer *connectionProgressTimer;
    id <SSSessionViewDelegate> _delegate;
    NSArray *_screens;
    NSImage *_userPicture;
    double _lastResignTime;
    SSScreenInfo *__selectedScreen;
    SSBorderView *__borderView;
    NSMutableArray *_connectionWindowConstraints;
    SSCurtainMessageViewController *_curtainMessageViewController;
    SSUDPSocketAddress *_udpSocketAddress;
    NSString *_curtainMessage;
    NSOrderedSet *_preferredURLs;
    NSMutableOrderedSet *_attemptedURLs;
    NSOrderedSet *_preferredCredentials;
    NSMutableOrderedSet *_attemptedCredentials;
    NSTimer *_menuBarUnlockTimer;
    unsigned long long _menuBarLockCounter;
    struct CGRect windowFrameBeforeEnteringFullScreen;
}

+ (BOOL)screenSharingEnabledLocally;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)keyPathsForValuesAffectingSelectedScreen;
+ (id)keyPathsForValuesAffectingFileTransferDelegate;
+ (id)keyPathsForValuesAffectingAllowsFileTransferFromRemote;
+ (id)keyPathsForValuesAffectingAllowsFileTransferToRemote;
+ (id)keyPathsForValuesAffectingFillsWindow;
+ (id)keyPathsForValuesAffectingCurtained;
+ (id)keyPathsForValuesAffectingShouldSharePasteboard;
+ (id)keyPathsForValuesAffectingIsControlling;
+ (id)keyPathsForValuesAffectingControlMode;
+ (id)keyPathsForValuesAffectingIsNotConnected;
+ (id)keyPathsForValuesAffectingIsDisconnected;
+ (id)keyPathsForValuesAffectingIsReconnecting;
+ (id)keyPathsForValuesAffectingIsConnecting;
+ (id)keyPathsForValuesAffectingIsConnected;
+ (id)keyPathsForValuesAffectingSupportsFileTransfer;
+ (id)keyPathsForValuesAffectingSupportsControlMode;
+ (id)keyPathsForValuesAffectingSupportsChangingScreenQualityMode;
+ (id)keyPathsForValuesAffectingSupportsScalingScreen;
+ (id)keyPathsForValuesAffectingSupportsCurtainMode;
+ (id)keyPathsForValuesAffectingSupportsSharedPasteboard;
+ (id)keyPathsForValuesAffectingSupportsCopyPaste;
+ (id)keyPathsForValuesAffectingIsLegacyVNC;
+ (id)keyPathsForValuesAffectingShouldScaleScreen;
+ (id)occlusionStateNotificationName;
@property unsigned long long menuBarLockCounter; // @synthesize menuBarLockCounter=_menuBarLockCounter;
@property(retain) NSTimer *menuBarUnlockTimer; // @synthesize menuBarUnlockTimer=_menuBarUnlockTimer;
@property(retain) NSMutableOrderedSet *attemptedCredentials; // @synthesize attemptedCredentials=_attemptedCredentials;
@property(copy) NSOrderedSet *preferredCredentials; // @synthesize preferredCredentials=_preferredCredentials;
@property(retain) NSMutableOrderedSet *attemptedURLs; // @synthesize attemptedURLs=_attemptedURLs;
@property(copy) NSOrderedSet *preferredURLs; // @synthesize preferredURLs=_preferredURLs;
@property(copy) NSString *curtainMessage; // @synthesize curtainMessage=_curtainMessage;
@property(retain) SSUDPSocketAddress *udpSocketAddress; // @synthesize udpSocketAddress=_udpSocketAddress;
@property BOOL canToggleCurtainMode; // @synthesize canToggleCurtainMode=_canToggleCurtainMode;
@property(retain) SSCurtainMessageViewController *curtainMessageViewController; // @synthesize curtainMessageViewController=_curtainMessageViewController;
@property(retain) NSMutableArray *connectionWindowConstraints; // @synthesize connectionWindowConstraints=_connectionWindowConstraints;
@property(retain) SSBorderView *_borderView; // @synthesize _borderView=__borderView;
@property(retain) SSScreenInfo *_selectedScreen; // @synthesize _selectedScreen=__selectedScreen;
@property double lastResignTime; // @synthesize lastResignTime=_lastResignTime;
@property BOOL hasUnknownCursorState; // @synthesize hasUnknownCursorState=_hasUnknownCursorState;
@property(retain) NSImage *userPicture; // @synthesize userPicture=_userPicture;
@property(copy) NSArray *screens; // @synthesize screens=_screens;
@property id <SSSessionViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSTimer *connectionProgressTimer; // @synthesize connectionProgressTimer;
@property BOOL changingFullScreenMode; // @synthesize changingFullScreenMode;
@property BOOL toolbarVisibilityBeforeEnteringFullScreen; // @synthesize toolbarVisibilityBeforeEnteringFullScreen;
@property(retain) NSToolbar *windowToolbarBeforeEnteringFullScreen; // @synthesize windowToolbarBeforeEnteringFullScreen;
@property unsigned long long windowStyleMaskBeforeEnteringFullScreen; // @synthesize windowStyleMaskBeforeEnteringFullScreen;
@property struct CGRect windowFrameBeforeEnteringFullScreen; // @synthesize windowFrameBeforeEnteringFullScreen;
@property(retain) NSString *lastRetainedKerberosClientPrincipal; // @synthesize lastRetainedKerberosClientPrincipal;
@property(retain) NSString *kerberosClientPrincipal; // @synthesize kerberosClientPrincipal;
@property(retain) NSMutableArray *attemptedAuthTypes; // @synthesize attemptedAuthTypes;
@property(copy) NSString *cachedURL; // @synthesize cachedURL;
@property(copy) NSString *userEnteredAddressString; // @synthesize userEnteredAddressString;
@property(copy) NSArray *resolvedAddresses; // @synthesize resolvedAddresses;
@property(copy) NSString *bonjourDisplayName; // @synthesize bonjourDisplayName;
@property(copy) NSDate *resolveStartTime; // @synthesize resolveStartTime;
@property(retain) SSCredentials *cachedCredentials; // @synthesize cachedCredentials;
@property(copy) NSString *requestConsoleCommand; // @synthesize requestConsoleCommand;
@property int chosenSessionSelectionAction; // @synthesize chosenSessionSelectionAction;
@property(copy) NSString *currentConsoleUser; // @synthesize currentConsoleUser;
@property BOOL switchedDisplay; // @synthesize switchedDisplay;
@property(getter=isAnimatingResize) BOOL animatingResize; // @synthesize animatingResize;
@property BOOL userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC; // @synthesize userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC;
@property BOOL shouldNotifyOfFailureToExitCurtainMode; // @synthesize shouldNotifyOfFailureToExitCurtainMode;
@property BOOL shouldNotifyOfFailureToEnterCurtainMode; // @synthesize shouldNotifyOfFailureToEnterCurtainMode;
@property BOOL shouldNotifyOfVirtualDisplayStateChange; // @synthesize shouldNotifyOfVirtualDisplayStateChange;
@property BOOL userEndedConnection; // @synthesize userEndedConnection;
@property BOOL clientChangedCurtainMode; // @synthesize clientChangedCurtainMode;
@property BOOL isUsingVirtualDisplay; // @synthesize isUsingVirtualDisplay;
@property BOOL simulatingLiveResize; // @synthesize simulatingLiveResize;
@property BOOL showingFullScreenMenuBar; // @synthesize showingFullScreenMenuBar;
@property BOOL isOffConsole; // @synthesize isOffConsole;
@property BOOL hasEntireScreen; // @synthesize hasEntireScreen;
@property int sessionState; // @synthesize sessionState;
@property BOOL shouldWarnUserForUnencryptedLegacyVNC; // @synthesize shouldWarnUserForUnencryptedLegacyVNC;
@property BOOL allowsSSHTunnelForLegacyVNC; // @synthesize allowsSSHTunnelForLegacyVNC;
@property struct OpaqueEventHandlerRef *menuAutoShowEventHandler; // @synthesize menuAutoShowEventHandler;
@property(copy) NSArray *displayedOverlayNotifications; // @synthesize displayedOverlayNotifications;
@property(retain) SSNewConnectionViewController *addressGatheringConnectionViewController; // @synthesize addressGatheringConnectionViewController;
@property(retain) SSConnectionProgressViewController *connectionProgressViewController; // @synthesize connectionProgressViewController;
@property(retain) SSSessionSelectViewController *sessionSelectViewController; // @synthesize sessionSelectViewController;
@property(retain) SSConnectionWindowController *connectionWindowController; // @synthesize connectionWindowController;
@property(retain) SSFadeView *reconnectOverlay; // @synthesize reconnectOverlay;
@property(retain) SSPanningScrollView *scrollView; // @synthesize scrollView;
@property(retain) SSFrameBufferView *frameBufferView; // @synthesize frameBufferView;
@property(retain) SSSession *session; // @synthesize session;
@property id <SSSessionFileTransferDelegate> _fileTransferDelegate; // @synthesize _fileTransferDelegate;
@property BOOL _allowsFileTransferFromRemote; // @synthesize _allowsFileTransferFromRemote;
@property BOOL _allowsFileTransferToRemote; // @synthesize _allowsFileTransferToRemote;
@property BOOL _shouldSharePasteboard; // @synthesize _shouldSharePasteboard;
@property BOOL _fillsWindow; // @synthesize _fillsWindow;
@property(retain) NSCursor *_controlCursor; // @synthesize _controlCursor;
@property(retain) NSCursor *_observeCursor; // @synthesize _observeCursor;
@property BOOL _shouldShowCursorForUnknownCursorState; // @synthesize _shouldShowCursorForUnknownCursorState;
@property BOOL _curtained; // @synthesize _curtained;
@property int _controlMode; // @synthesize _controlMode;
@property(readonly) BOOL supportsFileTransfer;
@property(readonly) BOOL supportsControlMode;
@property(readonly) BOOL supportsChangingScreenQualityMode;
@property(readonly) BOOL supportsScalingScreen;
@property(readonly) BOOL supportsCurtainMode;
@property(readonly) BOOL supportsSharedPasteboard;
@property(readonly) BOOL supportsCopyPaste;
@property(readonly) BOOL isSelectingSession;
@property(readonly) BOOL isGatheringAddressForConnection;
@property(readonly) BOOL isLegacyVNC;
@property id <SSSessionFileTransferDelegate> fileTransferDelegate;
@property BOOL allowsFileTransferFromRemote;
@property BOOL allowsFileTransferToRemote;
@property BOOL allowsAssistMode;
@property BOOL shouldSharePasteboard;
@property(retain) NSCursor *controlCursor;
@property(retain) NSCursor *observeCursor;
@property int screenQualityMode;
@property BOOL shouldShowCursorForUnknownCursorState;
@property(retain) SSScreenInfo *selectedScreen;
@property(getter=isCurtained) BOOL curtained;
@property BOOL shouldScaleScreen;
@property(readonly) BOOL isSessionVisible;
@property int controlMode;
@property(readonly) BOOL isSharingControl;
@property(readonly) BOOL isControlling;
@property(readonly) BOOL isNotConnected;
@property(readonly) BOOL isDisconnected;
@property(readonly) BOOL isReconnecting;
@property(readonly) BOOL isConnected;
@property(readonly) BOOL isConnecting;
@property(readonly) BOOL isFullScreen;
@property(readonly) BOOL isBonjourSession;
@property BOOL fillsWindow;
@property(readonly) struct CGRect sessionFrame;
@property(readonly) struct CGSize contentSize;
@property struct CGColor *borderColor;
@property double borderWidth;
@property double borderSpacing;
@property(readonly) NSView *borderView;
- (void)setShadow:(id)arg1;
- (id)shadow;
@property(readonly) BOOL isForcedViewer;
- (id)displayName;
- (BOOL)isWindowVisible:(id)arg1;
- (void)userClosedConnectionAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)runUserClosedConnectionSheet;
- (void)fadeDidEnd;
- (void)endReconnectOverlay:(BOOL)arg1;
- (void)showReconnectOverlayView:(BOOL)arg1 andMaxAlpha:(float)arg2;
- (void)showReconnectOverlayView:(BOOL)arg1;
- (void)showReconnectOverlayView;
- (void)startReconnectOverlayWithDelay:(double)arg1 showSpinner:(BOOL)arg2;
- (void)startReconnectOverlay;
- (void)showVirtualDisplayStateChangeNotification;
- (void)handleScreenParameterChange:(id)arg1;
- (void)closeConnectingWindow;
- (BOOL)isAddressGatheringConnectionViewVisible;
- (BOOL)isSessionSelectViewVisible;
- (BOOL)isConnectionWindowVisible;
- (void)showURL:(id)arg1;
- (void)showAddressGatheringConnectionWindow;
- (void)fillConnectionWindowWithViewFromController:(id)arg1;
- (void)showConnectionWindowWithViewFromController:(id)arg1;
- (void)removeConnectionWindowConstraints;
- (void)constrainConnectionWindowToView:(id)arg1;
- (void)transitionConnectionWindowFrom:(id)arg1 to:(id)arg2;
- (BOOL)isConnectionProgressViewVisible;
- (void)showConnectionProgressWindow;
- (id)lockedByMessageWithUserMessage:(id)arg1;
- (void)showCurtainMessageWindow;
- (BOOL)shouldProceedWithVNC;
- (BOOL)shouldProceedWithGuestConnection;
- (void)showConnectToSelfWarning;
- (void)showSSHNotAvailableWarning;
- (void)showSSHConfigurationWarning;
- (void)showPermanentFailure;
- (void)showConnectionFailedWarning;
- (void)showManagementAppWarning;
- (void)showCouldNotControlWarning;
- (void)showAuthenticationFailedWarning;
- (void)showShareConsoleRequestDeniedWarning;
- (void)showFailedToChangeSharingModeWarning;
- (void)showFailedToObserveWarning;
- (void)showFailedToControlWarning;
- (void)showFailedToExitCurtainModeWarning;
- (void)showFailedToEnterCurtainModeWarning;
- (id)windowToTarget;
- (void)showWarningWithTitle:(id)arg1 andMessage:(id)arg2;
- (void)configureForNewFillsWindowValue:(BOOL)arg1 withOldValue:(BOOL)arg2 oldWindow:(id)arg3 newWindow:(id)arg4;
- (void)unregisterForSessionObservation;
- (void)registerForSessionObservation;
- (void)configureDragAndDropFileCopy;
- (void)configurePanningMode:(int)arg1;
- (void)configureViewerForScaling:(BOOL)arg1;
- (void)configureInputEventConsumer;
- (void)configureViewerForLocalContentsScale;
- (double)aspectRatio;
- (BOOL)perceivedScalingFactorHasChanged;
- (BOOL)resetScalingFactorIfNeeded:(double)arg1;
- (void)fullScreenUsableRectChanged;
- (double)menuBarAndToolBarHeight;
- (BOOL)isFullScreenToolbarAutohidingEnabled;
- (BOOL)windowIsFullScreen:(id)arg1;
- (BOOL)fullScreenWindowNeedsShrinkingForFrame:(struct CGRect)arg1;
- (void)resizeSessionForFrame:(struct CGRect)arg1;
- (void)resizeSessionToLargestPossibleSize;
- (struct CGSize)defaultInitialSessionSize;
- (struct CGSize)windowOverhead;
- (struct CGSize)subtractWindowOverheadFromSize:(struct CGSize)arg1;
- (struct CGSize)addWindowOverheadToSize:(struct CGSize)arg1;
- (struct CGRect)sessionContainingRect;
- (struct Rect)dockAndMenuBarInsets;
- (struct Rect)sessionContainingRectInsets;
- (struct Rect)sessionShrinkInsetsForFrame:(struct CGRect)arg1;
- (struct Rect)toolbarAndTitleBarInsets;
- (struct Rect)sessionInsets;
- (struct CGSize)addInsets:(struct Rect)arg1 toSize:(struct CGSize)arg2;
- (struct CGSize)subtractInsets:(struct Rect)arg1 fromSize:(struct CGSize)arg2;
- (struct CGRect)subtractInsets:(struct Rect)arg1 fromRect:(struct CGRect)arg2;
- (struct CGSize)largestPossibleWindowedSessionSize;
- (struct CGSize)largestPossibleSessionSize;
- (struct CGSize)adjustedContentSize:(struct CGSize)arg1 forContainingRectWithSize:(struct CGSize)arg2 unscaledSize:(struct CGSize)arg3 resultingScalingFactor:(double *)arg4;
- (struct CGRect)adjustedFrame:(struct CGRect)arg1 forContainingRect:(struct CGRect)arg2 positionAdjustment:(int)arg3 sessionInsets:(struct Rect)arg4 containingRectInsets:(struct Rect)arg5 unscaledSize:(struct CGSize)arg6 resultingScalingFactor:(double *)arg7;
- (struct CGRect)adjustedFrame:(struct CGRect)arg1 forUnscaledSize:(struct CGSize)arg2 withResultingScalingFactor:(double *)arg3;
- (double)adjustedScalingFactorForFrame:(struct CGRect)arg1;
- (double)scalingFactorForContentSize:(struct CGSize)arg1 unscaledSize:(struct CGSize)arg2;
- (void)saveUserFrame;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (id)kerberosLabel;
- (void)releaseKerberosCredential;
- (void)retainKerberosCredential;
- (void)cleanupForCancel;
- (void)cleanupUserCancelledCredentialsRequest;
- (BOOL)cachedCredentialsAreValid;
- (void)reconnectSessionAndResolve:(BOOL)arg1;
- (void)reconnectSessionAndResolve;
- (void)connect;
- (void)cancelResolve:(id)arg1;
- (void)startResolveProgress:(id)arg1;
- (void)addressResolutionFailedMainThread;
- (void)addressesResolvedMainThread:(id)arg1;
- (void)resolveURL:(id)arg1;
- (id)localCursor;
- (void)curtainPromptConfirmedWithMessage:(id)arg1;
- (void)curtainPromptCanceled;
- (void)clearCredentialsAndConnect;
- (id)escapedURL;
- (id)displayNameForDialogs;
- (void)guestAccessRequestCancelled;
- (void)gatheredCredentials:(id)arg1 withStatus:(int)arg2;
- (void)resolvedBonjourName:(id)arg1;
- (void)startedBonjourResolveAtTimestamp:(id)arg1;
- (void)resolvedAddresses:(id)arg1 withStatus:(int)arg2;
- (void)logAddressResolutionToMessageTracerWithStatus:(int)arg1;
- (void)teardownForNewConnectionPrompt;
- (void)addressEntered:(id)arg1;
- (void)connectionPromptClosed;
- (void)connectionCanceled;
- (void)stopWaitingForUserOnMainDisplay:(id)arg1;
- (void)selectCancelled:(id)arg1;
- (void)selectVirtualDisplay:(id)arg1;
- (void)selectMainDisplay:(id)arg1;
- (void)ssFrameBufferView:(id)arg1 didDropRemotePaths:(id)arg2 atLocalDropDestination:(id)arg3;
- (void)ssSessionDisplaysDidWake:(id)arg1;
- (void)ssSessionDisplaysDidSleep:(id)arg1;
- (void)ssSession:(id)arg1 virtualDisplayStateChanged:(BOOL)arg2;
- (void)ssSessionUserClosedConnection:(id)arg1;
- (void)ssSessionBeeped:(id)arg1;
- (void)ssSession:(id)arg1 fileCopyDidComplete:(id)arg2;
- (void)ssSession:(id)arg1 fileCopyProgressDidUpdate:(id)arg2;
- (void)ssSession:(id)arg1 dragDroppedLocalPaths:(id)arg2 onRemotePath:(id)arg3;
- (void)ssSessionRemotePasteboardChanged:(id)arg1;
- (void)ssSession:(id)arg1 cursorPositionChanged:(struct SSPoint)arg2;
- (void)ssSession:(id)arg1 fullScreenUpdateProgress:(double)arg2;
- (void)ssSession:(id)arg1 sizeChanged:(struct SSSize)arg2;
- (void)ssSessionReady:(id)arg1;
- (void)ssSession:(id)arg1 sessionSelectionResult:(int)arg2;
- (void)ssSession:(id)arg1 wantsSessionSelection:(id)arg2 consoleUser:(id)arg3;
- (void)ssSession:(id)arg1 authenticationResult:(int)arg2;
- (void)ssSession:(id)arg1 wantsCredentialsForAuthenticationTypes:(id)arg2;
- (void)ssSessionTerminated:(id)arg1;
- (void)ssSession:(id)arg1 connectDidFail:(int)arg2;
- (void)ssSession:(id)arg1 delegateControlModeSet:(int)arg2;
- (void)workspaceActiveSpaceChanged:(id)arg1;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (id)windowRestorationStateForWindow:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (void)setMenuBarDelay:(double)arg1;
- (void)lockMenuBar:(BOOL)arg1;
- (void)armUnlockMenuBarTimer;
- (void)unlockMenuBarTimer:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)windowDidChangeOcclusionState:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)clearSessionStateAndDisconnect:(BOOL)arg1;
- (void)closeSession;
- (void)focus;
- (BOOL)handleSSInputEvent:(id)arg1;
- (void)adjustShrinkModeForEvent:(id)arg1;
- (void)setShowCursor:(id)arg1;
- (void)setHideCursor:(id)arg1;
- (void)getRemotePasteboard:(id)arg1;
- (void)sendLocalPasteboard:(id)arg1;
- (void)captureScreen:(id)arg1;
- (void)connectToUDPSocketAddress:(id)arg1 withOptions:(id)arg2;
- (void)connectToURLs:(id)arg1 withPreferredCredentials:(id)arg2 options:(id)arg3;
- (void)connectToURLs:(id)arg1 withOptions:(id)arg2;
- (void)connectToURL:(id)arg1 withPreferredCredentials:(id)arg2 options:(id)arg3;
- (void)connectToURL:(id)arg1 withOptions:(id)arg2;
- (void)connectWithOptions:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)description;
- (void)dealloc;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

