//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CalNetworkChangeNotificationListener.h"
#import "CoreDAVAccountInfoProvider.h"
#import "CoreDAVLogDelegate.h"
#import "CoreDAVOAuthInfoProvider.h"

@class CalCalDAVCalendarSource, CalDAVAccount, CalDAVClientInfoSentry, CalDAVFreeBusyCache, CalDAVOperationQueue, NSArray, NSError, NSManagedObjectID, NSString, NSURL;

@interface CalDAVPrincipal : NSObject <CalNetworkChangeNotificationListener, CoreDAVAccountInfoProvider, CoreDAVOAuthInfoProvider, CoreDAVLogDelegate>
{
    CalDAVAccount *_account;
    BOOL _isDelegate;
    BOOL _isWritable;
    BOOL _isNotRefreshable;
    NSString *_principalPath;
    NSURL *_overrideBaseURL;
    NSString *_preferredCalendarUserAddress;
    NSArray *_calendarUserAddresses;
    NSString *_userDisplayName;
    NSString *_uid;
    CalDAVFreeBusyCache *_freeBusyCache;
    NSError *_lastOperationError;
    NSArray *_tempCalendarList;
    int _queryOfficeHoursRunning;
    int _connectedState;
    NSError *_connectionError;
    CalDAVOperationQueue *_operationQueue;
    CalCalDAVCalendarSource *_refreshingCalendar;
    NSManagedObjectID *_managedObjectID;
    BOOL _checkingCredentials;
    BOOL _serverSupportsRequestCompression;
    CalDAVClientInfoSentry *_clientInfoSentry;
    NSString *_pushToken;
    NSString *_cachedClientToken;
}

+ (BOOL)compareAddressURL:(id)arg1 localURL:(id)arg2;
+ (BOOL)compareAddressURL:(id)arg1 localString:(id)arg2;
+ (BOOL)compareAddressString:(id)arg1 localString:(id)arg2;
@property(retain) NSString *pushToken; // @synthesize pushToken=_pushToken;
@property(retain) NSError *lastOperationError; // @synthesize lastOperationError=_lastOperationError;
@property(retain) NSURL *overrideBaseURL; // @synthesize overrideBaseURL=_overrideBaseURL;
@property(retain) CalDAVClientInfoSentry *clientInfoSentry; // @synthesize clientInfoSentry=_clientInfoSentry;
@property BOOL serverSupportsRequestCompression; // @synthesize serverSupportsRequestCompression=_serverSupportsRequestCompression;
@property(retain) NSManagedObjectID *managedObjectID; // @synthesize managedObjectID=_managedObjectID;
- (void)coreDAVTransmittedDataFinished;
- (void)coreDAVLogTransmittedDataPartial:(id)arg1;
- (BOOL)shouldLogTransmittedData;
- (void)coreDAVLogDiagnosticMessage:(id)arg1 atLevel:(long long)arg2;
- (long long)coreDAVOutputLevel;
- (long long)coreDAVLogLevel;
- (id)additionalHeaderValues;
- (BOOL)shouldCompressRequests;
- (BOOL)shouldSendClientInfoHeaderForURL:(id)arg1;
- (void)noteHomeSetOnDifferentHost:(id)arg1;
- (void)homeSetUpdated:(id)arg1;
- (BOOL)shouldTurnModalOnBadPassword;
- (BOOL)shouldFailAllTasks;
- (BOOL)handleCertificateError:(id)arg1;
- (BOOL)handleAuthenticateAgainstProtectionSpace:(id)arg1;
- (BOOL)handleShouldUseCredentialStorage;
- (BOOL)handleTrustChallenge:(id)arg1;
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)userAgentHeader;
- (id)serverComplianceClasses;
- (id)accountID;
- (id)principalURL;
- (id)absoluteURLForPath:(id)arg1 overrideBaseURL:(id)arg2;
- (id)absoluteURLForPath:(id)arg1;
- (id)identityPersist;
- (id)user;
- (id)serverRoot;
- (long long)port;
- (id)host;
- (id)scheme;
- (BOOL)refreshDelegateListWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)refresh:(int)arg1 previousMigrateDelay:(long long)arg2;
- (void)kickQueue;
- (void)refresh:(int)arg1;
- (void)refreshAndMigrateWithPreviousDelay:(long long)arg1;
- (BOOL)_isPendingRefresh;
- (BOOL)_isRefreshing;
- (BOOL)isOperationPartOfRefresh:(id)arg1;
- (void)goOfflineAfterError:(BOOL)arg1;
- (void)updateCalendarsTimeZone:(id)arg1;
- (BOOL)useKerberos;
- (void)setUseKerberos:(BOOL)arg1;
- (void)doneCheckingCredentials:(BOOL)arg1;
- (void)setSourceError:(id)arg1;
- (BOOL)serverSupportsDelegates;
- (BOOL)isOffline;
- (BOOL)isBusy;
- (void)setConnectedState:(int)arg1;
- (void)broadcastConnectedState;
- (void)setConnectedStateWithoutQueue:(id)arg1;
- (int)connectedState;
- (id)freeBusyCache;
- (id)key;
- (id)uid;
- (void)setUid:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setDisplayName:(id)arg1;
- (id)displayName;
- (void)setPassword:(id)arg1;
- (id)password;
- (void)setLogin:(id)arg1;
- (id)login;
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)arg1;
- (BOOL)calendarUserAddressIsEquivalentTo:(id)arg1;
- (id)calendarUserAddress;
- (void)setCalendarUserAddresses:(id)arg1;
- (id)calendarUserAddresses;
- (id)updatedCalendarUserAddresses;
- (void)setFullPrincipalAddress:(id)arg1;
- (id)fullPrincipalAddress;
- (void)setPrincipalPath:(id)arg1;
- (id)principalPath;
- (void)setIsWritable:(BOOL)arg1;
- (BOOL)isWritable;
- (void)setIsDelegate:(BOOL)arg1;
- (BOOL)isDelegate;
- (id)operationQueue;
- (id)clientToken;
- (void)clientTokenRequestedByServer;
- (id)oauth2Token;
- (id)oauthToken;
- (id)oauthInfoProvider;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)systemNetworkDidChange;
@property(readonly) BOOL isSharingSchedulingSupported;
@property(readonly) BOOL isManagedAttachmentSupported;
- (BOOL)attemptAutomaticConnect;
- (void)invalidate;
- (void)finalize;
- (void)dealloc;
- (id)initAndCreateQueue:(BOOL)arg1;
- (id)account;
- (void)setAccount:(id)arg1;
- (id)_principalPathKey;

@end

