//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Notes/NFAccountProxy.h>

#import "IMAPAccount.h"

@class IMAPConnectionPool, IMAPGateway, MCAuthScheme, NFIMAPFolderProxy, NSArray, NSData, NSDictionary, NSLock, NSMutableDictionary, NSOperationQueue, NSString, NSURL;

@interface NFIMAPAccountProxy : NFAccountProxy <IMAPAccount>
{
    NSOperationQueue *_remoteTaskQueue;
    NSMutableDictionary *_quotaRoots;
    IMAPConnectionPool *_connectionPool;
    NSLock *_connectionPoolLock;
    NFIMAPFolderProxy *_specialNotesFolder;
    NSMutableDictionary *_folderProxiesByObjectID;
    NSMutableDictionary *_imapMailboxesByFolderProxy;
    BOOL _recoveringFromConnectionLoss;
    unsigned int _readBufferSize;
    NSString *_separatorCharacter;
    NSString *_sessionPassword;
    long long _gmailCapabilitiesSupport;
    NSDictionary *_serverID;
    IMAPGateway *_offlineRecoveryGateway;
}

+ (id)accountTypeString;
+ (void)saveAccountInfoToDefaults;
@property(retain) IMAPGateway *offlineRecoveryGateway; // @synthesize offlineRecoveryGateway=_offlineRecoveryGateway;
@property unsigned int readBufferSize; // @synthesize readBufferSize=_readBufferSize;
@property(copy) NSDictionary *serverID; // @synthesize serverID=_serverID;
@property long long gmailCapabilitiesSupport; // @synthesize gmailCapabilitiesSupport=_gmailCapabilitiesSupport;
@property BOOL recoveringFromConnectionLoss; // @synthesize recoveringFromConnectionLoss=_recoveringFromConnectionLoss;
@property(copy) NSString *sessionPassword; // @synthesize sessionPassword=_sessionPassword;
@property(copy) NSString *separatorCharacter; // @synthesize separatorCharacter=_separatorCharacter;
- (void).cxx_destruct;
- (id)_imapMailboxForFolderProxy:(id)arg1;
- (id)_serverNameForFolder:(id)arg1 parentServerName:(id)arg2 separatorCharacter:(id)arg3;
- (id)_separatorCharacterWithGateway:(id)arg1;
- (BOOL)deleteFolder:(id)arg1;
- (BOOL)renameFolder:(id)arg1 newName:(id)arg2 newParentServerName:(id)arg3;
- (BOOL)addFolderToRemote:(id)arg1 parentServerName:(id)arg2;
- (BOOL)_recoverFromConnectionlessState;
- (id)checkOutExistingGatewayForFolder:(id)arg1;
- (id)checkOutGatewayForFolder:(id)arg1 highPriority:(BOOL)arg2 needsCheckIn:(char *)arg3;
@property(retain) NSData *tlsCertificate;
- (id)notesFolder;
- (void)setAccountState:(long long)arg1;
- (BOOL)hasNotes;
- (void)synchronizeAllFolders;
- (id)_addSubfolders:(id)arg1 toParent:(id)arg2 localFolders:(id)arg3;
- (void)_generateServerNameForFolder:(id)arg1 withSeparatorCharacter:(id)arg2;
- (void)_synchronizeNotesFolderServerName;
- (void)synchronizeFolderList;
- (id)defaultFolderToReceivePushes;
- (void)setFolderToReceivePushes:(id)arg1;
- (id)folderProxyForFolder:(id)arg1;
- (BOOL)isServerReachable;
- (void)recoverFromConnectionLoss;
- (BOOL)shouldMoveDeletedMessagesToTrash;
- (void)backgroundFetchCompletedCount:(unsigned long long)arg1;
- (void)sendAccountNeedsCheckingNotification;
- (BOOL)allowsPartialDownloads;
- (id)quotaRootForName:(id)arg1 createIfNeeded:(BOOL)arg2;
- (BOOL)handleResponseCodeFromResponse:(id)arg1;
- (id)IMAPMailboxForMailboxName:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)setServerPathPrefix:(id)arg1 permanently:(BOOL)arg2;
- (id)serverPathPrefix;
@property(readonly) id <IMAPOfflineCache> offlineCache;
@property BOOL useIDLEIfAvailable;
- (void)presentOverQuotaAlert;
- (void)setCachePolicy:(long long)arg1 permanently:(BOOL)arg2;
- (long long)cachePolicy;
- (void)incrementTotalCountOfMessagesReceived:(unsigned long long)arg1;
- (void)incrementCountOfNewUnreadMessagesReceivedInInbox:(unsigned long long)arg1;
- (void)newUnreadMessagesHaveBeenReceivedInInbox;
- (id)remoteTaskQueue;
- (BOOL)canAuthenticateWithScheme:(id)arg1 connection:(id)arg2;
- (id)authSchemesForConnection:(id)arg1;
- (id)authenticatedConnection;
- (id)newConnectedConnectionDiscoveringBestSettings:(BOOL)arg1 withConnectTimeout:(double)arg2 readWriteTimeout:(double)arg3;
- (void)respondToHostBecomingReachable;
- (BOOL)connectAndAuthenticate:(id)arg1;
- (BOOL)shouldRetryConnectionWithoutCertificateCheckingAfterError:(id)arg1 host:(id)arg2 didPromptUser:(char *)arg3;
@property(copy) NSString *username;
@property(retain) MCAuthScheme *preferredAuthScheme;
- (void)setTLSIdentity:(struct OpaqueSecIdentityRef *)arg1;
- (struct OpaqueSecIdentityRef *)copyTLSIdentity;
@property long long securityLayerType;
@property long long portNumber;
@property(copy) NSString *hostname;
@property(readonly) NSString *subscriptionURLLabel;
@property(readonly) NSURL *subscriptionURL;
@property BOOL usesSSL;
@property(readonly) BOOL requiresAuthentication;
@property(readonly) NSString *googleClientToken;
@property(readonly) NSString *appleAuthenticationToken;
@property(readonly) NSString *applePersonID;
- (unsigned short)_portNumberForKeychain;
@property(copy) NSString *password;
@property(readonly) NSArray *standardSSLPorts;
@property(readonly) NSArray *standardPorts;
@property BOOL configureDynamically;
@property(readonly) NSString *saslProfileName;
@property(readonly) NSString *accountTypeString;
- (void)invalidate;
- (void)dealloc;
- (id)initWithAccount:(id)arg1;
- (void)_nfIMAPAccountProxyCommonInit;
- (id)init;
- (id)initWithManagedObjectID:(id)arg1;

// Remaining properties
@property(copy) NSString *displayName;
@property(copy) NSString *externalHostname;

@end

