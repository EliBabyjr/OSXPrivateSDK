//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <CommerceKit/CKPurchaseController.h>

@class NSMutableArray;

@interface CKUpdateController : CKPurchaseController
{
    NSMutableArray *_xpcCallbacks;
    CDUnknownBlockType _appUpdatePurchaseCancelHandler;
    CDUnknownBlockType _appUpdatePurchaseCompletionHandler;
    CDUnknownBlockType _firmwareWarningHandler;
    CDUnknownBlockType _licenseAgreementHandler;
    CDUnknownBlockType _osUpdateCancelHandler;
    CDUnknownBlockType _osUpdateProgressHandler;
    CDUnknownBlockType _osUpdateErrorHandler;
}

+ (BOOL)shouldOfferDoItLater;
+ (id)_updateFailureDialogWithAuditInfo:(id)arg1;
+ (BOOL)_otherUsersAreLoggedIn;
+ (void)showUpdateFailureWithAuditToken:(id)arg1;
+ (void)postDoItLaterFailedNotification;
+ (BOOL)isRunningAppImmortalWhiteListed:(id)arg1;
+ (id)immortalAppBundleIDWhiteList;
+ (void)promptUserToOptInForAutoUpdate;
+ (BOOL)shouldPromptForAutoUpdateOptIn;
+ (BOOL)isAutoUpdatedEnabled;
+ (id)installedUpdatesJournal;
+ (BOOL)softwareUpdateCatalogIsSeedCatalog;
+ (long long)softwareUpdateCatalogTrustLevel;
+ (int)catalogTrustLevel;
+ (id)catalogHostName;
+ (void)stopObservingOSUpdateProgressWithCallback:(id)arg1;
+ (id)observerOSUpdateProgressWithProgressHandler:(CDUnknownBlockType)arg1;
+ (void)stopObservingOSUpdateScansWithCallback:(id)arg1;
+ (id)observerOSUpdateScansWithProgressHandler:(CDUnknownBlockType)arg1;
+ (void)startOSUpdateScanAndReportProgressImmediately:(BOOL)arg1 forceFullScan:(BOOL)arg2 checkForAppUpdates:(BOOL)arg3 launchedFromNotification:(BOOL)arg4 setUserHasSeenUpdates:(BOOL)arg5 progressHandler:(CDUnknownBlockType)arg6;
+ (BOOL)osUpdateScanInProgress;
+ (BOOL)shouldBlockLogout;
+ (id)appUpdatesToBeInstalledLater;
+ (id)osUpdatesToBeInstalledLater;
+ (id)osUpdatesToBeInstalledAfterLogout;
+ (void)cancelOSUpdates:(id)arg1;
+ (void)cancelUpdatesToBeInstalledLater;
+ (BOOL)hasUpdatesToBeInstalledLater;
+ (void)installAvailableAppAndOSUpdates;
+ (void)installAvailableUpdatesLaterWithMode:(long long)arg1;
+ (void)unhideAllOSUpdates;
+ (void)hideOSUpdatesWithProductKeys:(id)arg1;
+ (BOOL)hasHiddenOSUpdates;
+ (id)availableBookUpdatesBadgeCount;
+ (void)checkForBookUpdatesWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (void)checkForAppUpdatesWithUserHasSeenUpdates:(BOOL)arg1;
+ (id)incompatibleAppUpdates;
+ (id)availableAppUpdateWithItemIdentifier:(unsigned long long)arg1;
+ (id)availableAppUpdates;
+ (id)availableUpdatesBadgeCount;
+ (id)availableCriticalOSUpdates;
+ (id)availableOSUpdates;
+ (id)osUpdatesForUpdateKeys:(id)arg1 inAvailableUpdates:(id)arg2 returningOrphanedKeyed:(id *)arg3;
+ (id)osUpdatesForUpdateKeys:(id)arg1 inAvailableUpdates:(id)arg2;
+ (id)osUpdateKeysForUpdates:(id)arg1;
@property(copy) CDUnknownBlockType osUpdateErrorHandler; // @synthesize osUpdateErrorHandler=_osUpdateErrorHandler;
@property(copy) CDUnknownBlockType osUpdateProgressHandler; // @synthesize osUpdateProgressHandler=_osUpdateProgressHandler;
@property(copy) CDUnknownBlockType osUpdateCancelHandler; // @synthesize osUpdateCancelHandler=_osUpdateCancelHandler;
@property(copy) CDUnknownBlockType licenseAgreementHandler; // @synthesize licenseAgreementHandler=_licenseAgreementHandler;
@property(copy) CDUnknownBlockType firmwareWarningHandler; // @synthesize firmwareWarningHandler=_firmwareWarningHandler;
@property(copy) CDUnknownBlockType appUpdatePurchaseCompletionHandler; // @synthesize appUpdatePurchaseCompletionHandler=_appUpdatePurchaseCompletionHandler;
@property(copy) CDUnknownBlockType appUpdatePurchaseCancelHandler; // @synthesize appUpdatePurchaseCancelHandler=_appUpdatePurchaseCancelHandler;
- (void).cxx_destruct;
- (void)observeAvailableUpdatesWithBlock:(CDUnknownBlockType)arg1;
- (void)startAppUpdates:(id)arg1 andOSUpdates:(id)arg2;
- (void)_cancelOSUpdates:(id)arg1;
- (void)_cancelAppUpdates:(id)arg1;
- (id)_licenseAgreementProductKeysForOSUpdates:(id)arg1;
- (id)_firmwareWarningProductKeysForOSUpdates:(id)arg1;
- (id)init;

@end

