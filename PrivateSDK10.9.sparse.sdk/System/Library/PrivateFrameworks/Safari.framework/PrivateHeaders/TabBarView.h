//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Safari/SlidingViewsBar.h>

#import "MorphingDragImageDropTarget.h"
#import "NSTabViewDelegate.h"

@class AttachedTabButton, BrowserTabViewItem, BrowserWindowControllerMac, NSTabView, TabLineupButton, VariableWidthNewTabButton;

__attribute__((visibility("hidden")))
@interface TabBarView : SlidingViewsBar <MorphingDragImageDropTarget, NSTabViewDelegate>
{
    BrowserWindowControllerMac *browserWindowControllerMac;
    NSTabView *tabView;
    BrowserTabViewItem *_tabViewItemPinnedToOverflowButton;
    BOOL _windowDidClose;
    BOOL _isReadyToUse;
    BOOL _areCloseButtonsVisible;
    BOOL _reorderingButton;
    BOOL _reorderingTabs;
    BOOL _separatorBeforeSpecialButtonsUsesActiveTabColor;
    AttachedTabButton *_draggedTab;
    AttachedTabButton *_tabSelectedBeforeTabDrag;
    VariableWidthNewTabButton *_newTabButton;
    unsigned long long _previousLayoutTabCount;
    double _previousLayoutButtonWidth;
    unsigned long long _previousLayoutButtonLeftover;
    long long _boundsTrackingRectTag;
    BOOL _shouldPreventButtonWidthChanges;
    BOOL _needsButtonLayoutOnMouseExit;
    TabLineupButton *_tabLineupButton;
    CDUnknownBlockType _magnificationEventHandler;
    unsigned long long _waitingOnNewTabs;
    BOOL _wantsButtonUpdateAnimationGroup;
    unsigned long long _inButtonUpdateAnimationGroup;
    unsigned long long _numberOfRunningAnimations;
}

+ (double)tabBackgroundImageHeight;
+ (id)inactiveTabBackgroundForNonMainWindow;
+ (id)activeTabBackgroundForNonMainWindow;
+ (id)inactiveTabBackgroundForMainWindow;
+ (id)activeTabBackgroundForMainWindow;
+ (id)acceptedDragTypesForTabViewItems;
+ (id)_URLsFromPasteboard:(id)arg1;
+ (id)_dragTypesForURL;
+ (unsigned long long)_draggedURLOperationForDraggingInfo:(id)arg1;
+ (void)_addURLsFromBookmark:(id)arg1 toArray:(id)arg2;
@property(copy, nonatomic) CDUnknownBlockType magnificationEventHandler; // @synthesize magnificationEventHandler=_magnificationEventHandler;
@property(retain, nonatomic) BrowserTabViewItem *tabViewItemPinnedToOverflowButton; // @synthesize tabViewItemPinnedToOverflowButton=_tabViewItemPinnedToOverflowButton;
- (void)magnifyWithEvent:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)morphingDragImage:(id)arg1 performDragOperation:(id)arg2;
- (void)morphingDragImage:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingEntered:(id)arg2;
- (id)menuItemsForClippedItemsIndicator:(id)arg1;
- (id)_tabViewItemDisplayedInOverflowTab;
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)animation:(id)arg1 didSlideView:(id)arg2;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)endButtonUpdateAnimationGroup;
- (void)beginButtonUpdateAnimationGroup;
@property(readonly) BOOL inButtonUpdateAnimationGroup;
- (void)updateLabelNowForTab:(id)arg1;
- (void)updateLabelSoonForTab:(id)arg1;
- (void)safariBrowserWindowUpdateTabTitlesNow:(struct BrowserWindowController *)arg1;
- (void)getButtonWidth:(double *)arg1 leftover:(unsigned long long *)arg2 isClipping:(char *)arg3 forTabCount:(unsigned long long)arg4;
- (struct CGSize)dragImageSizeForTab:(id)arg1;
- (void)disconnectFromBrowserWindowController;
- (void)detachTabAndPositionUnderCursor:(id)arg1 sourceView:(id)arg2;
- (void)didDragTab:(id)arg1;
- (void)willDragTab:(id)arg1;
- (void)selectTabViewItem:(id)arg1;
- (id)selectedTabViewItem;
- (unsigned long long)numberOfVisibleTabsForTotalTabCount:(unsigned long long)arg1;
- (unsigned long long)numberOfVisibleTabs;
- (unsigned long long)numberOfTabs;
- (void)moveTabViewItem:(id)arg1 toIndex:(unsigned long long)arg2;
- (unsigned long long)indexOfTabViewItem:(id)arg1;
- (void)performDragOperationForTabViewItem:(id)arg1 draggingInfo:(id)arg2;
- (unsigned long long)dragOperationForTabViewItem:(id)arg1 draggingInfo:(id)arg2;
- (struct CGRect)clipRectForSlidingButton:(id)arg1;
- (void)setReadyToUse;
- (void)replaceTabView:(id)arg1;
- (id)stackingFramesInWindowCoordinatesForTabCount:(unsigned long long)arg1;
- (id)stackingFramesInWindowCoordinates;
- (id)newTabButton;
- (double)slidingWidthForView:(id)arg1;
- (double)widthOfDraggingInfo:(id)arg1;
- (id)viewPinnedToOverflowIndicator;
- (unsigned long long)updateDropTarget:(id)arg1;
- (void)setDropIndex:(unsigned long long)arg1;
- (void)refreshButtons;
- (void)draggedSlidingView:(id)arg1;
- (void)reorderedSlidingView:(id)arg1;
- (BOOL)reorderSlidingView:(id)arg1 fromMouseDownEvent:(id)arg2;
- (BOOL)isReorderingTabViews;
- (double)minButtonX;
- (double)maxSlidingViewX;
- (double)minSlidingViewX;
- (double)maxButtonXWithClipIndicator;
- (double)maxButtonXWithoutClipIndicator;
- (id)menuForEvent:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)_windowChangedKeyState;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)windowWillClose;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)_installSpecialButtons;
- (void)_windowBackgroundDidChange;
- (void)_updateCloseButtonsVisibility;
- (void)_toggleTabLineup:(id)arg1;
- (void)_createTab:(id)arg1;
- (id)_leftTruncateStrings:(id)arg1 withFont:(id)arg2 width:(float)arg3;
- (id)_leftTruncateWordsFrom:(id)arg1 withFont:(id)arg2 width:(float)arg3 maxWordsToRemove:(unsigned int)arg4;
- (void)_reselectTabSelectedBeforeTabDrag;
- (void)_performTabBarDragOperationForURLs:(id)arg1 droppedAtIndex:(unsigned long long)arg2 honorWindowPolicy:(BOOL)arg3;
- (void)_performTabBarDragOperationForURLs:(id)arg1 droppedAtIndex:(unsigned long long)arg2;
- (void)_performTabBarDragOperationForTabViewItem:(id)arg1 URL:(id)arg2;
- (struct CGPoint)_mouseLocationForDraggingInfo:(id)arg1;
- (void)_detachTab:(id)arg1 withClickPoint:(struct CGPoint)arg2 sourceView:(id)arg3;
- (void)_selectClippedTabViewItem:(id)arg1;
- (void)_didClickCloseButton:(id)arg1;
- (void)_didClickTabButton:(id)arg1;
- (void)_setSelectedTabState:(long long)arg1;
- (void)_updateKeyLoop;
- (struct CGRect)_stackingFrameWithPreviousButtonStackingFrame:(struct CGRect)arg1 width:(double)arg2 height:(double)arg3 leftover:(unsigned long long *)arg4 isFirstHiddenOverflowTab:(BOOL)arg5;
- (void)_layOutButtonsAccountingForClickedCloseButtons:(BOOL)arg1;
- (void)_layOutButtons;
- (void)_updateSeparators;
- (void)_updateTabLineupButtonSeparator;
- (void)_updateTrackingRects;
- (void)_removeTrackingRects;
- (id)_sortedVisibleButtons;
- (void)_setSpecialSeparatorsAndClipIndicatorNeedDisplay;
- (void)_setSeparatorBeforeSpecialButtonsUsesActiveTabColor:(BOOL)arg1;
- (struct CGRect)_separatorBetweenSpecialButtonsRect;
- (void)_updateTabLineupButtonWithAnimation:(BOOL)arg1;
- (void)_uninstallTabLineupButtonIfNeededWithAnimation:(BOOL)arg1;
- (void)_installTabLineupButtonIfNeededWithAnimation:(BOOL)arg1;
- (struct CGRect)_separatorBetweenClipIndicatorRect;
- (BOOL)_isVisible;
- (void)_getButtonWidth:(double *)arg1 leftover:(unsigned long long *)arg2 isClipping:(char *)arg3;
- (id)_backgroundFillImage;
- (double)_availableWidthForButtonsWhenClipped;
- (double)_availableWidthForButtonsWhenUnclipped;
- (unsigned int)_numberOfVisibleTabViewItems;
- (void)_removeTabButton:(id)arg1;
- (id)_insertTabButtonWithTabViewItem:(id)arg1 atIndex:(unsigned int)arg2;
- (BOOL)_clipIndicatorIsShowing;

@end

