//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class NSString;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AltitudeDebugSettings {
    char altitudePauseLoading;
    char altitudeShowTileBounds;
    char altitudeThreadDrawing;
    char altitudeHighResSatellite;
    char altitudeMipmapSatellite;
    char altitudeMipmapFlyover;
    char altitudeShowNightLight;
    float lodScale;
    float animationSpinTime;
    float tileQualityThreshold;
    float forceGridTime;
    float tourAnimationAltitude;
    float tourAnimationStepDuration;
    float tourAnimationCameraOffset;
    float tourAnimationTilt;
};

struct AnchorContext {
    _Bool _field1;
    id _field2;
    id _field3;
};

struct AnchorFactory;

struct AngularSpringDamper {
    double _position;
    double _velocity;
    double _acceleration;
    double _kSpring;
    double _kDamper;
    double _restingPosition;
    _Bool _directionIsPositive;
};

struct Arrow;

struct BRectImp<double> {
    struct Vec2Imp<double> p0;
    struct Vec2Imp<double> p1;
};

struct BRectImp<float> {
    Vec2Imp_1782d7e3 _field1;
    Vec2Imp_1782d7e3 _field2;
};

struct BufferRange;

struct BuildingTopMeshFactory {
    struct unordered_map<unsigned long, vk::BuildingTopMeshFactory::Group, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, vk_allocator<std::__1::pair<const unsigned long, vk::BuildingTopMeshFactory::Group>>> _field1;
    struct unordered_map<unsigned long, vk::BuildingTopMeshFactory::Group, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, vk_allocator<std::__1::pair<const unsigned long, vk::BuildingTopMeshFactory::Group>>> _field2;
    unsigned int _field3;
};

struct CGColor;

struct CGContext;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CVSMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct CameraManager {
    CDUnknownFunctionPointerType *_vptr$CameraManager;
    _Bool _panBegin;
    _Bool _panInProgress;
    _Bool _panEnd;
    struct Vector2i _panCurrentCursor;
    struct Vector2i _panPreviousCursor;
    struct Position3d _panStartPosition;
    double _panDistance;
    _Bool _rotateBegin;
    _Bool _rotateInProgress;
    _Bool _rotateEnd;
    struct Position3d _rotateStartPosition;
    struct Vector2i _rotateCurrentCursor;
    double _rotateAngle;
    _Bool _tiltBegin;
    _Bool _tiltInProgress;
    _Bool _tiltEnd;
    struct Position3d _tiltStartPosition;
    struct Vector2i _tiltCurrentCursor;
    double _tiltAngle;
    _Bool _zoomBegin;
    _Bool _zoomInProgress;
    _Bool _zoomEnd;
    struct Position3d _zoomStartPosition;
    struct Vector2i _zoomCurrentCursor;
    double _zoomFactor;
    _Bool _zoomRotateToNorth;
    _Bool _useTiltLimit;
    int _tiltLimitMode;
    _Bool _tiltLimitTransferInProgress;
    _Bool _tiltLimitPushDown;
    double _startPushDownTilt;
    double _tiltLimitTransferFraction;
    double _startTiltLimitTilt;
    struct PositionGeo3d _startTiltLimitPosition;
    struct Vector3d _startTiltLimitDirection;
    double _fullZoomTiltLimitFactor;
};

struct CollisionItem;

struct CollisionPair;

struct Color {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct DiscontinuityEdgeInfo {
    id _field1;
    _Bool _field2;
    unsigned int _field3;
};

struct Flow {
    long long _field1;
    float _field2;
    float _field3;
    int _field4;
};

struct FontAtlas {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<vk::FontAtlasPage> _field2;
    struct vector<std::__1::shared_ptr<vk::FontAtlasPage>, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage>>> _field3;
    struct FontAtlasCell *_field4;
    struct FontAtlasCell *_field5;
    int _field6;
    struct CGColor *_field7;
    struct CGContext *_field8;
    void *_field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    struct FontGlyphCache *_field13;
};

struct FontAtlasCell;

struct FontAtlasPage;

struct FontGlyphCache;

struct FontOptions {
    struct _retain_ptr<const __CFString *, geo::_retain_cf<const __CFString *>, geo::_release_cf> _field1;
    _Bool _field2;
    float _field3;
    _Bool _field4;
    float _field5;
    float _field6;
};

struct GeoCoordinates {
    struct Longitude _field1;
    struct Latitude _field2;
};

struct GeoPolyline {
    struct shared_ptr<const std::__1::vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>> _field1;
    int _field2;
};

struct GlobeAdapter {
    struct shared_ptr<vk::GlobeAdapterData> _field1;
    struct GlobeView *_field2;
    struct VKPoint _field3;
    struct {
        double _field1;
        double _field2;
    } _field4;
    struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile>>> _field5;
    shared_ptr_dd1f7020 _field6;
};

struct GlobeAdapterData;

struct GlobeView {
    CDUnknownFunctionPointerType *_field1;
};

struct IconLabelPart;

struct Incident {
    struct GeoCoordinates _field1;
    struct String _field2;
    struct String _field3;
    int _field4;
    struct String _field5;
    struct String _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    int _field11;
    unsigned char _field12;
    _Bool _field13;
};

struct IndicesQuad;

struct InfoLabel;

struct InfoLabelCollider {
    struct vector<vk::CollisionItem, vk_allocator<vk::CollisionItem>> _field1;
    struct vector<vk::CollisionPair, vk_allocator<vk::CollisionPair>> _field2;
};

struct InfoLabelFeaturePool {
    struct mutex _field1;
    unsigned int _field2;
    struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>>> _field3;
    struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>>> _field4;
    struct unordered_map<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry, std::__1::hash<GEOVectorTile *>, std::__1::equal_to<GEOVectorTile *>, vk_allocator<std::__1::pair<GEOVectorTile *const, vk::InfoLabelFeaturePool::TileFeatureValueEntry>>> _field5;
};

struct InfoMapTile;

struct InfoOcclusionTester {
    CDUnknownFunctionPointerType *_field1;
    struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, vk_allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery>>> _field2;
    struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, vk_allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery>>> _field3;
    struct deque<unsigned int, vk_allocator<unsigned int>> _field4;
    id _field5;
    unsigned int _field6;
    _Bool _field7;
    CDStruct_aa5aacbc _field8;
};

struct LabelFeature;

struct LabelManager {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<vk::LabelManager> _field2;
    id _field3;
    unsigned long long _field4;
    int _field5;
    long long _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    Vec3Imp_f658403c _field25;
    Vec3Imp_f658403c _field26;
    Vec3Imp_f658403c _field27;
    Vec3Imp_f658403c _field28;
    Vec3Imp_f658403c _field29;
    double _field30;
    double _field31;
    double _field32;
    double _field33;
    double _field34;
    CDStruct_aa5aacbc _field35;
    struct Mat4Imp<double> _field36;
    struct CGSize _field37;
    BRectImp_7721609a _field38;
    BRectImp_7721609a _field39;
    float _field40;
    float _field41;
    float _field42;
    unsigned long long _field43;
    double _field44[5];
    double _field45;
    int _field46;
    struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile>>> _field47;
    struct InfoLabelFeaturePool _field48;
    struct LabelPool _field49;
    struct LabelPool _field50;
    struct TrafficIncidentLabelPool _field51;
    struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel>>> _field52;
    struct vector<vk::InfoLabel *, vk_allocator<vk::InfoLabel *>> _field53;
    struct FontAtlas _field54;
    struct LabelMesh _field55;
    struct LabelStyleCache _field56;
    struct InfoLabelCollider _field57;
    struct InfoOcclusionTester _field58;
    struct shared_ptr<vk::LabelTrafficTilePool> _field59;
    struct vector<std::__1::shared_ptr<vk::LabelIcon>, vk_allocator<std::__1::shared_ptr<vk::LabelIcon>>> _field60;
    struct shared_ptr<vk::LabelManagerNotifierHook> _field61;
    unsigned int _field62;
    unsigned int _field63;
    double _field64;
    double _field65;
    _Bool _field66;
    float _field67;
    int _field68;
    unsigned long long _field69;
    unsigned long long _field70;
    double _field71;
    shared_ptr_0c41964b _field72;
    struct shared_ptr<vk::LabelFeature> _field73;
    int _field74;
    long long _field75;
    long long _field76;
    long long _field77;
    _Bool _field78;
    _Bool _field79;
    int _field80;
    int _field81;
    struct _retain_ptr<VKLabelMarker *, geo::_retain_objc, geo::_release_objc> {
        CDUnknownFunctionPointerType *_field1;
        id _field2;
        struct _retain_objc _field3;
        struct _release_objc _field4;
    } _field82;
    struct _retain_ptr<VKLabelNavSupport *, geo::_retain_objc, geo::_release_objc> {
        CDUnknownFunctionPointerType *_field1;
        id _field2;
        struct _retain_objc _field3;
        struct _release_objc _field4;
    } _field83;
    struct _retain_ptr<NSArray *, geo::_retain_objc, geo::_release_objc> {
        CDUnknownFunctionPointerType *_field1;
        id _field2;
        struct _retain_objc _field3;
        struct _release_objc _field4;
    } _field84;
    struct vector<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>>> _field85;
    _Bool _field86;
    vector_a3d7a989 _field87;
    BRectImp_d02b3a99 _field88;
    BRectImp_7721609a _field89;
    BRectImp_7721609a _field90;
    BRectImp_7721609a _field91;
};

struct LabelManagerNotifierHook;

struct LabelMesh {
    struct vector<vk::IconLabelPart *, vk_allocator<vk::IconLabelPart *>> _field1;
    struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange>> _field2;
    struct VGLIconMeshVAO _field3;
    struct vector<vk::TextLabelPart *, vk_allocator<vk::TextLabelPart *>> _field4;
    struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange>> _field5;
    struct VGLTextMeshVAO _field6;
    struct FontAtlas *_field7;
    id _field8;
    id _field9;
    _Bool _field10;
};

struct LabelNavJunctionInfo;

struct LabelPool {
    struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int>>, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>>>> _field1;
};

struct LabelStyleCache {
    struct mutex _field1;
    float _field2;
    _Bool _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    struct _retain_ptr<VKStylesheet *, geo::_retain_objc, geo::_release_objc> {
        CDUnknownFunctionPointerType *_field1;
        id _field2;
        struct _retain_objc _field3;
        struct _release_objc _field4;
    } _field7;
    _Bool _field8;
    struct _retain_ptr<VKStyleResolutionSession *, geo::_retain_objc, geo::_release_objc> {
        CDUnknownFunctionPointerType *_field1;
        id _field2;
        struct _retain_objc _field3;
        struct _release_objc _field4;
    } _field9;
    struct map<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, vk_allocator<std::__1::pair<VKLabelDrawStyle *const, std::__1::shared_ptr<vk::LabelStyle>>>> _field10;
};

struct LabelTrafficTilePool;

struct Latitude {
    unsigned int _field1;
};

struct LineDash;

struct LineStipple;

struct Longitude {
    unsigned int _field1;
};

struct MapEdge;

struct Mat4Imp<double> {
    double _field1[16];
};

struct NavContext {
    CDUnknownFunctionPointerType *_field1;
    struct LabelManager *_field2;
};

struct NavLabel;

struct PolylineCoordinate {
    unsigned int index;
    float offset;
};

struct Position3d {
    double _latitude;
    double _longitude;
    double _height;
};

struct PositionGeo3d {
    double _x;
    double _y;
    double _z;
};

struct Record {
    unsigned int _field1;
    unsigned int _field2;
    float _field3;
    float _field4;
    long long _field5;
    int _field6;
    float _field7;
    float _field8;
};

struct RenderStepsSet {
    struct vector<PolygonRenderStep, vk_allocator<PolygonRenderStep>> renderSteps;
    struct vector<PolygonRenderStep, vk_allocator<PolygonRenderStep>> transparentRenderSteps;
};

struct RenderThread {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    struct Renderer *_field3;
};

struct Renderer;

struct RoadPathElement<std::__1::shared_ptr<geo::MapEdge>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    shared_ptr_035a2da2 _field4;
    struct GeoPolyline _field5;
    int _field6;
};

struct RouteCalibration {
    unsigned int _field1;
    float _field2;
};

struct RouteJunctionInfo;

struct RouteLineSection {
    CDUnknownFunctionPointerType *_field1;
    struct vector<vk::RouteLineSection::Vertex, vk_allocator<vk::RouteLineSection::Vertex>> _field2;
    struct vector<vk::RouteLineSection::Arrow, vk_allocator<vk::RouteLineSection::Arrow>> _field3;
    struct vector<vk::RouteLineSection::Arrow, vk_allocator<vk::RouteLineSection::Arrow>> _field4;
    _Bool _field5;
    _Bool _field6;
    float _field7;
    float _field8;
    struct list<VGLRouteLineMesh *, vk_allocator<VGLRouteLineMesh *>> _field9;
    struct VertexSource *_field10;
    struct VKPolylineWalker<vk::RouteLineSection::Vertex> _field11;
    struct VKRouteLineToMeshPathMap _field12;
    struct PolylineCoordinate _field13;
    struct PolylineCoordinate _field14;
    unsigned long long *_field15;
    unsigned long long _field16;
    double _field17;
    float _field18;
    _Bool _field19;
    float _field20;
    float _field21;
};

struct RouteLineStyle {
    float strokeWidthRegularPoints;
    double halfWidthRegularPoints;
    double halfWidthRegularUnselectedScale;
    double halfWidthRealisticMeters;
    struct _VGLColor travelledRegularRouteLineColor;
    struct _VGLColor inverseBaseColorSelected;
    struct _VGLColor inverseBaseColorUnselected;
    NSString *selectedTextureNameRealistic;
    NSString *obscuredTextureNameRealistic;
    NSString *travelledTextureNameRealistic;
    double widthEnlargementStartZoom;
    double widthEnlargementScale;
    double maxEnlargement;
    float arrowMinZoom;
    float selectedArrowMinZoom;
    float brightnessRealistic;
};

struct RouteMapMatchingSection {
    CDUnknownFunctionPointerType *_field1;
};

struct RouteSegment;

struct SimpleBuffer<unsigned char> {
    unsigned long long _size;
    unsigned long long _capacity;
    char *_buf;
};

struct SimpleBuffer<unsigned short> {
    unsigned long long _size;
    unsigned long long _capacity;
    unsigned short *_buf;
};

struct SnappedPathMapMatchingSection;

struct SpringDamper {
    double _position;
    double _velocity;
    double _acceleration;
    double _kSpring;
    double _kDamper;
    double _restingPosition;
    _Bool _directionIsPositive;
};

struct String {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct TextLabelPart;

struct TileExclusionArea;

struct TrafficAccum {
    int _field1;
    struct vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>> _field2;
    int _field3;
    int _field4;
    int _field5;
    id _field6;
    int _field7;
    CDStruct_183601bc *_field8;
    int _field9;
    float _field10;
};

struct TrafficDynamicTile;

struct TrafficIncidentLabelPool {
    struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel>>> _field1;
};

struct TrafficSegment {
    struct PolylineCoordinate _field1;
    char _field2;
};

struct TrafficSkeletonTile {
    struct vector<zilch::TrafficSkeletonTile::Record, std::__1::allocator<zilch::TrafficSkeletonTile::Record>> m_records;
};

struct TrafficWalking {
    double _field1;
    int _field2;
    int _field3;
    unsigned int *_field4;
    unsigned int *_field5;
};

struct UniformHandle;

struct VGLIconMeshVAO {
    CDUnknownFunctionPointerType *_field1;
    struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad>> _field2;
    struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad>> _field3;
    unsigned int _field4;
    id _field5;
    id _field6;
    id _field7;
    unsigned int _field8;
    _Bool _field9;
    _Bool _field10;
};

struct VGLMeshLeafNode;

struct VGLMeshNode;

struct VGLTextMeshVAO {
    CDUnknownFunctionPointerType *_field1;
    struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad>> _field2;
    struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad>> _field3;
    unsigned int _field4;
    id _field5;
    id _field6;
    id _field7;
    unsigned int _field8;
    _Bool _field9;
    _Bool _field10;
};

struct VKCacheKey {
    unsigned int a;
    unsigned int b;
    unsigned int c;
    unsigned int d;
};

struct VKCameraState {
    struct VKPoint position;
    CDStruct_aa5aacbc orientation;
    float aspectRatio;
    float verticalFieldOfView;
};

struct VKCircularBuffer<double> {
    struct vector<double, vk_allocator<double>> _field1;
    unsigned long long _field2;
    _Bool _field3;
    double _field4;
};

struct VKEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct VKFootprintConvexHull_struct {
    int edgeCount;
    struct VKPoint edgeOrigin[6];
    Vec3Imp_f658403c edgeNormal[6];
};

struct VKGlobeRouteSplit {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct VKGlobeRouteStyle {
    float _field1;
    float _field2;
    float _field3;
    struct Color _field4;
    struct Color _field5;
    struct Color _field6;
    struct Color _field7;
    struct Color _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
};

struct VKGlobeStylesheet;

struct VKLabelNavRouteRoadEdge {
    struct PolylineCoordinate _field1;
    struct PolylineCoordinate _field2;
    CDStruct_183601bc *_field3;
};

struct VKLabelStyle {
    char _field1;
    unsigned int _field2;
    float _field3;
    char _field4;
    struct _VGLColor _field5;
    struct _VGLColor _field6;
    unsigned int _field7;
    float _field8;
    float _field9;
    CDStruct_cf20f7af _field10;
    int _field11;
    char _field12;
    float _field13;
    float _field14;
    struct _VGLColor _field15;
    struct _VGLColor _field16;
    int _field17;
    int _field18;
    long long _field19;
    char _field20;
    char _field21;
    char _field22;
    float _field23;
    int _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float _field29;
    float _field30;
    char _field31;
    int _field32;
    float _field33;
    char _field34;
    char _field35;
    int _field36;
    int _field37;
    struct _retain_ptr<const __CFString *, geo::_retain_cf<const __CFString *>, geo::_release_cf> _field38;
    struct _retain_ptr<const __CFString *, geo::_retain_cf<const __CFString *>, geo::_release_cf> _field39;
    struct _retain_ptr<const __CFString *, geo::_retain_cf<const __CFString *>, geo::_release_cf> _field40;
    struct FontOptions _field41;
};

struct VKNavigationCameraModel {
    double _halfVerticalFov;
    double _horizontalFov;
    double _tanHalfHorizontalFov;
    struct SpringDamper _pitchSpring;
    struct AngularSpringDamper _courseSpring;
    struct SpringDamper _referenceScreenOffsetSpring;
    struct SpringDamper _boomLengthSpring;
    State_3e0671f0 _targetState;
    double _previousUpdateTime;
};

struct VKPerformanceTestResult_struct {
    char *_field1;
    float _field2[5];
};

struct VKPoint {
    double x;
    double y;
    double z;
};

struct VKPolylineWalker<vk::RouteLineSection::Vertex> {
    struct VKPolylineWalkerDataSource<vk::RouteLineSection::Vertex> *_field1;
};

struct VKPolylineWalkerDataSource<vk::RouteLineSection::Vertex>;

struct VKProfileSparseRamp<CGSize> {
    union _u {
        struct VKProfileSparseRampValue {
            struct CGSize value;
            unsigned char hi;
        } v[2];
        struct CGSize *extra;
    } u;
    unsigned char count;
};

struct VKProfileSparseRamp<VKBlendMode> {
    _u_73374b6e u;
    unsigned char count;
};

struct VKProfileSparseRamp<VKIconGlyphStyle> {
    _u_a3a82b9c u;
    unsigned char count;
};

struct VKProfileSparseRamp<VKLabelTextVisibility> {
    _u_a3a82b9c u;
    unsigned char count;
};

struct VKProfileSparseRamp<VKPStyleProperties_GenericShieldStyle> {
    _u_73374b6e u;
    unsigned char count;
};

struct VKProfileSparseRamp<VKPStyleProperties_ShieldSize> {
    _u_73374b6e u;
    unsigned char count;
};

struct VKProfileSparseRamp<_VGLColor> {
    union _u {
        struct VKProfileSparseRampValue {
            struct _VGLColor value;
            unsigned char hi;
        } v[2];
        struct _VGLColor *extra;
    } u;
    unsigned char count;
};

struct VKProfileSparseRamp<float> {
    union _u {
        struct VKProfileSparseRampValue {
            float value;
            unsigned char hi;
        } v[2];
        float *extra;
    } u;
    unsigned char count;
};

struct VKProfileSparseRamp<geo::Vec2Imp<float>> {
    union _u {
        struct VKProfileSparseRampValue {
            Vec2Imp_1782d7e3 value;
            unsigned char hi;
        } v[2];
        Vec2Imp_1782d7e3 *extra;
    } u;
    unsigned char count;
};

struct VKProfileSparseRamp<int> {
    _u_73374b6e u;
    unsigned char count;
};

struct VKProfileSparseRamp<long> {
    _u_a3a82b9c u;
    unsigned char count;
};

struct VKProfileSparseRamp<signed char> {
    union _u {
        struct VKProfileSparseRampValue {
            char value;
            unsigned char hi;
        } v[2];
        char *extra;
    } u;
    unsigned char count;
};

struct VKProfileSparseRamp<unsigned int> {
    union _u {
        struct VKProfileSparseRampValue {
            unsigned int value;
            unsigned char hi;
        } v[2];
        unsigned int *extra;
    } u;
    unsigned char count;
};

struct VKRasterTileKey {
    unsigned int x;
    unsigned int y;
    unsigned int z;
    unsigned int pointSize;
};

struct VKRibbonMakerData {
    id _field1;
    id _field2;
    char _field3;
    char _field4;
    char _field5;
    float _field6;
    char _field7;
    char _field8;
    char _field9;
    struct vector<VKRibbonPolylineSegment, vk_allocator<VKRibbonPolylineSegment>> _field10;
};

struct VKRibbonMultiPolylineSegment;

struct VKRibbonPolylineSegment;

struct VKRouteLineToMeshPathMap {
    struct list<VKRouteLineToMeshPathMap::Range, vk_allocator<VKRouteLineToMeshPathMap::Range>> _field1;
    struct __list_iterator<VKRouteLineToMeshPathMap::Range, void *> {
        struct __list_node<VKRouteLineToMeshPathMap::Range, void *> *_field1;
    } _field2;
};

struct VKTileKey {
    unsigned int z;
    int x;
    int y;
    unsigned int pointSize;
};

struct Vec2Imp<double> {
    double x;
    double y;
};

struct Vec2Imp<float> {
    float x;
    float y;
};

struct Vec3Imp<double> {
    double x;
    double y;
    double z;
};

struct Vector2i {
    int _x;
    int _y;
};

struct Vector3d {
    double _x;
    double _y;
    double _z;
};

struct Vertex;

struct VertexQuad;

struct VertexSource;

struct ViewTransform;

struct Viewer {
    CDUnknownFunctionPointerType *_field1;
};

struct _CGLContextObject {
    struct __GLIContextRec *_field1;
    struct __GLIFunctionDispatchRec {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        CDUnknownFunctionPointerType _field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        CDUnknownFunctionPointerType _field13;
        CDUnknownFunctionPointerType _field14;
        CDUnknownFunctionPointerType _field15;
        CDUnknownFunctionPointerType _field16;
        CDUnknownFunctionPointerType _field17;
        CDUnknownFunctionPointerType _field18;
        CDUnknownFunctionPointerType _field19;
        CDUnknownFunctionPointerType _field20;
        CDUnknownFunctionPointerType _field21;
        CDUnknownFunctionPointerType _field22;
        CDUnknownFunctionPointerType _field23;
        CDUnknownFunctionPointerType _field24;
        CDUnknownFunctionPointerType _field25;
        CDUnknownFunctionPointerType _field26;
        CDUnknownFunctionPointerType _field27;
        CDUnknownFunctionPointerType _field28;
        CDUnknownFunctionPointerType _field29;
        CDUnknownFunctionPointerType _field30;
        CDUnknownFunctionPointerType _field31;
        CDUnknownFunctionPointerType _field32;
        CDUnknownFunctionPointerType _field33;
        CDUnknownFunctionPointerType _field34;
        CDUnknownFunctionPointerType _field35;
        CDUnknownFunctionPointerType _field36;
        CDUnknownFunctionPointerType _field37;
        CDUnknownFunctionPointerType _field38;
        CDUnknownFunctionPointerType _field39;
        CDUnknownFunctionPointerType _field40;
        CDUnknownFunctionPointerType _field41;
        CDUnknownFunctionPointerType _field42;
        CDUnknownFunctionPointerType _field43;
        CDUnknownFunctionPointerType _field44;
        CDUnknownFunctionPointerType _field45;
        CDUnknownFunctionPointerType _field46;
        CDUnknownFunctionPointerType _field47;
        CDUnknownFunctionPointerType _field48;
        CDUnknownFunctionPointerType _field49;
        CDUnknownFunctionPointerType _field50;
        CDUnknownFunctionPointerType _field51;
        CDUnknownFunctionPointerType _field52;
        CDUnknownFunctionPointerType _field53;
        CDUnknownFunctionPointerType _field54;
        CDUnknownFunctionPointerType _field55;
        CDUnknownFunctionPointerType _field56;
        CDUnknownFunctionPointerType _field57;
        CDUnknownFunctionPointerType _field58;
        CDUnknownFunctionPointerType _field59;
        CDUnknownFunctionPointerType _field60;
        CDUnknownFunctionPointerType _field61;
        CDUnknownFunctionPointerType _field62;
        CDUnknownFunctionPointerType _field63;
        CDUnknownFunctionPointerType _field64;
        CDUnknownFunctionPointerType _field65;
        CDUnknownFunctionPointerType _field66;
        CDUnknownFunctionPointerType _field67;
        CDUnknownFunctionPointerType _field68;
        CDUnknownFunctionPointerType _field69;
        CDUnknownFunctionPointerType _field70;
        CDUnknownFunctionPointerType _field71;
        CDUnknownFunctionPointerType _field72;
        CDUnknownFunctionPointerType _field73;
        CDUnknownFunctionPointerType _field74;
        CDUnknownFunctionPointerType _field75;
        CDUnknownFunctionPointerType _field76;
        CDUnknownFunctionPointerType _field77;
        CDUnknownFunctionPointerType _field78;
        CDUnknownFunctionPointerType _field79;
        CDUnknownFunctionPointerType _field80;
        CDUnknownFunctionPointerType _field81;
        CDUnknownFunctionPointerType _field82;
        CDUnknownFunctionPointerType _field83;
        CDUnknownFunctionPointerType _field84;
        CDUnknownFunctionPointerType _field85;
        CDUnknownFunctionPointerType _field86;
        CDUnknownFunctionPointerType _field87;
        CDUnknownFunctionPointerType _field88;
        CDUnknownFunctionPointerType _field89;
        CDUnknownFunctionPointerType _field90;
        CDUnknownFunctionPointerType _field91;
        CDUnknownFunctionPointerType _field92;
        CDUnknownFunctionPointerType _field93;
        CDUnknownFunctionPointerType _field94;
        CDUnknownFunctionPointerType _field95;
        CDUnknownFunctionPointerType _field96;
        CDUnknownFunctionPointerType _field97;
        CDUnknownFunctionPointerType _field98;
        CDUnknownFunctionPointerType _field99;
        CDUnknownFunctionPointerType _field100;
        CDUnknownFunctionPointerType _field101;
        CDUnknownFunctionPointerType _field102;
        CDUnknownFunctionPointerType _field103;
        CDUnknownFunctionPointerType _field104;
        CDUnknownFunctionPointerType _field105;
        CDUnknownFunctionPointerType _field106;
        CDUnknownFunctionPointerType _field107;
        CDUnknownFunctionPointerType _field108;
        CDUnknownFunctionPointerType _field109;
        CDUnknownFunctionPointerType _field110;
        CDUnknownFunctionPointerType _field111;
        CDUnknownFunctionPointerType _field112;
        CDUnknownFunctionPointerType _field113;
        CDUnknownFunctionPointerType _field114;
        CDUnknownFunctionPointerType _field115;
        CDUnknownFunctionPointerType _field116;
        CDUnknownFunctionPointerType _field117;
        CDUnknownFunctionPointerType _field118;
        CDUnknownFunctionPointerType _field119;
        CDUnknownFunctionPointerType _field120;
        CDUnknownFunctionPointerType _field121;
        CDUnknownFunctionPointerType _field122;
        CDUnknownFunctionPointerType _field123;
        CDUnknownFunctionPointerType _field124;
        CDUnknownFunctionPointerType _field125;
        CDUnknownFunctionPointerType _field126;
        CDUnknownFunctionPointerType _field127;
        CDUnknownFunctionPointerType _field128;
        CDUnknownFunctionPointerType _field129;
        CDUnknownFunctionPointerType _field130;
        CDUnknownFunctionPointerType _field131;
        CDUnknownFunctionPointerType _field132;
        CDUnknownFunctionPointerType _field133;
        CDUnknownFunctionPointerType _field134;
        CDUnknownFunctionPointerType _field135;
        CDUnknownFunctionPointerType _field136;
        CDUnknownFunctionPointerType _field137;
        CDUnknownFunctionPointerType _field138;
        CDUnknownFunctionPointerType _field139;
        CDUnknownFunctionPointerType _field140;
        CDUnknownFunctionPointerType _field141;
        CDUnknownFunctionPointerType _field142;
        CDUnknownFunctionPointerType _field143;
        CDUnknownFunctionPointerType _field144;
        CDUnknownFunctionPointerType _field145;
        CDUnknownFunctionPointerType _field146;
        CDUnknownFunctionPointerType _field147;
        CDUnknownFunctionPointerType _field148;
        CDUnknownFunctionPointerType _field149;
        CDUnknownFunctionPointerType _field150;
        CDUnknownFunctionPointerType _field151;
        CDUnknownFunctionPointerType _field152;
        CDUnknownFunctionPointerType _field153;
        CDUnknownFunctionPointerType _field154;
        CDUnknownFunctionPointerType _field155;
        CDUnknownFunctionPointerType _field156;
        CDUnknownFunctionPointerType _field157;
        CDUnknownFunctionPointerType _field158;
        CDUnknownFunctionPointerType _field159;
        CDUnknownFunctionPointerType _field160;
        CDUnknownFunctionPointerType _field161;
        CDUnknownFunctionPointerType _field162;
        CDUnknownFunctionPointerType _field163;
        CDUnknownFunctionPointerType _field164;
        CDUnknownFunctionPointerType _field165;
        CDUnknownFunctionPointerType _field166;
        CDUnknownFunctionPointerType _field167;
        CDUnknownFunctionPointerType _field168;
        CDUnknownFunctionPointerType _field169;
        CDUnknownFunctionPointerType _field170;
        CDUnknownFunctionPointerType _field171;
        CDUnknownFunctionPointerType _field172;
        CDUnknownFunctionPointerType _field173;
        CDUnknownFunctionPointerType _field174;
        CDUnknownFunctionPointerType _field175;
        CDUnknownFunctionPointerType _field176;
        CDUnknownFunctionPointerType _field177;
        CDUnknownFunctionPointerType _field178;
        CDUnknownFunctionPointerType _field179;
        CDUnknownFunctionPointerType _field180;
        CDUnknownFunctionPointerType _field181;
        CDUnknownFunctionPointerType _field182;
        CDUnknownFunctionPointerType _field183;
        CDUnknownFunctionPointerType _field184;
        CDUnknownFunctionPointerType _field185;
        CDUnknownFunctionPointerType _field186;
        CDUnknownFunctionPointerType _field187;
        CDUnknownFunctionPointerType _field188;
        CDUnknownFunctionPointerType _field189;
        CDUnknownFunctionPointerType _field190;
        CDUnknownFunctionPointerType _field191;
        CDUnknownFunctionPointerType _field192;
        CDUnknownFunctionPointerType _field193;
        CDUnknownFunctionPointerType _field194;
        CDUnknownFunctionPointerType _field195;
        CDUnknownFunctionPointerType _field196;
        CDUnknownFunctionPointerType _field197;
        CDUnknownFunctionPointerType _field198;
        CDUnknownFunctionPointerType _field199;
        CDUnknownFunctionPointerType _field200;
        CDUnknownFunctionPointerType _field201;
        CDUnknownFunctionPointerType _field202;
        CDUnknownFunctionPointerType _field203;
        CDUnknownFunctionPointerType _field204;
        CDUnknownFunctionPointerType _field205;
        CDUnknownFunctionPointerType _field206;
        CDUnknownFunctionPointerType _field207;
        CDUnknownFunctionPointerType _field208;
        CDUnknownFunctionPointerType _field209;
        CDUnknownFunctionPointerType _field210;
        CDUnknownFunctionPointerType _field211;
        CDUnknownFunctionPointerType _field212;
        CDUnknownFunctionPointerType _field213;
        CDUnknownFunctionPointerType _field214;
        CDUnknownFunctionPointerType _field215;
        CDUnknownFunctionPointerType _field216;
        CDUnknownFunctionPointerType _field217;
        CDUnknownFunctionPointerType _field218;
        CDUnknownFunctionPointerType _field219;
        CDUnknownFunctionPointerType _field220;
        CDUnknownFunctionPointerType _field221;
        CDUnknownFunctionPointerType _field222;
        CDUnknownFunctionPointerType _field223;
        CDUnknownFunctionPointerType _field224;
        CDUnknownFunctionPointerType _field225;
        CDUnknownFunctionPointerType _field226;
        CDUnknownFunctionPointerType _field227;
        CDUnknownFunctionPointerType _field228;
        CDUnknownFunctionPointerType _field229;
        CDUnknownFunctionPointerType _field230;
        CDUnknownFunctionPointerType _field231;
        CDUnknownFunctionPointerType _field232;
        CDUnknownFunctionPointerType _field233;
        CDUnknownFunctionPointerType _field234;
        CDUnknownFunctionPointerType _field235;
        CDUnknownFunctionPointerType _field236;
        CDUnknownFunctionPointerType _field237;
        CDUnknownFunctionPointerType _field238;
        CDUnknownFunctionPointerType _field239;
        CDUnknownFunctionPointerType _field240;
        CDUnknownFunctionPointerType _field241;
        CDUnknownFunctionPointerType _field242;
        CDUnknownFunctionPointerType _field243;
        CDUnknownFunctionPointerType _field244;
        CDUnknownFunctionPointerType _field245;
        CDUnknownFunctionPointerType _field246;
        CDUnknownFunctionPointerType _field247;
        CDUnknownFunctionPointerType _field248;
        CDUnknownFunctionPointerType _field249;
        CDUnknownFunctionPointerType _field250;
        CDUnknownFunctionPointerType _field251;
        CDUnknownFunctionPointerType _field252;
        CDUnknownFunctionPointerType _field253;
        CDUnknownFunctionPointerType _field254;
        CDUnknownFunctionPointerType _field255;
        CDUnknownFunctionPointerType _field256;
        CDUnknownFunctionPointerType _field257;
        CDUnknownFunctionPointerType _field258;
        CDUnknownFunctionPointerType _field259;
        CDUnknownFunctionPointerType _field260;
        CDUnknownFunctionPointerType _field261;
        CDUnknownFunctionPointerType _field262;
        CDUnknownFunctionPointerType _field263;
        CDUnknownFunctionPointerType _field264;
        CDUnknownFunctionPointerType _field265;
        CDUnknownFunctionPointerType _field266;
        CDUnknownFunctionPointerType _field267;
        CDUnknownFunctionPointerType _field268;
        CDUnknownFunctionPointerType _field269;
        CDUnknownFunctionPointerType _field270;
        CDUnknownFunctionPointerType _field271;
        CDUnknownFunctionPointerType _field272;
        CDUnknownFunctionPointerType _field273;
        CDUnknownFunctionPointerType _field274;
        CDUnknownFunctionPointerType _field275;
        CDUnknownFunctionPointerType _field276;
        CDUnknownFunctionPointerType _field277;
        CDUnknownFunctionPointerType _field278;
        CDUnknownFunctionPointerType _field279;
        CDUnknownFunctionPointerType _field280;
        CDUnknownFunctionPointerType _field281;
        CDUnknownFunctionPointerType _field282;
        CDUnknownFunctionPointerType _field283;
        CDUnknownFunctionPointerType _field284;
        CDUnknownFunctionPointerType _field285;
        CDUnknownFunctionPointerType _field286;
        CDUnknownFunctionPointerType _field287;
        CDUnknownFunctionPointerType _field288;
        CDUnknownFunctionPointerType _field289;
        CDUnknownFunctionPointerType _field290;
        CDUnknownFunctionPointerType _field291;
        CDUnknownFunctionPointerType _field292;
        CDUnknownFunctionPointerType _field293;
        CDUnknownFunctionPointerType _field294;
        CDUnknownFunctionPointerType _field295;
        CDUnknownFunctionPointerType _field296;
        CDUnknownFunctionPointerType _field297;
        CDUnknownFunctionPointerType _field298;
        CDUnknownFunctionPointerType _field299;
        CDUnknownFunctionPointerType _field300;
        CDUnknownFunctionPointerType _field301;
        CDUnknownFunctionPointerType _field302;
        CDUnknownFunctionPointerType _field303;
        CDUnknownFunctionPointerType _field304;
        CDUnknownFunctionPointerType _field305;
        CDUnknownFunctionPointerType _field306;
        CDUnknownFunctionPointerType _field307;
        CDUnknownFunctionPointerType _field308;
        CDUnknownFunctionPointerType _field309;
        CDUnknownFunctionPointerType _field310;
        CDUnknownFunctionPointerType _field311;
        CDUnknownFunctionPointerType _field312;
        CDUnknownFunctionPointerType _field313;
        CDUnknownFunctionPointerType _field314;
        CDUnknownFunctionPointerType _field315;
        CDUnknownFunctionPointerType _field316;
        CDUnknownFunctionPointerType _field317;
        CDUnknownFunctionPointerType _field318;
        CDUnknownFunctionPointerType _field319;
        CDUnknownFunctionPointerType _field320;
        CDUnknownFunctionPointerType _field321;
        CDUnknownFunctionPointerType _field322;
        CDUnknownFunctionPointerType _field323;
        CDUnknownFunctionPointerType _field324;
        CDUnknownFunctionPointerType _field325;
        CDUnknownFunctionPointerType _field326;
        CDUnknownFunctionPointerType _field327;
        CDUnknownFunctionPointerType _field328;
        CDUnknownFunctionPointerType _field329;
        CDUnknownFunctionPointerType _field330;
        CDUnknownFunctionPointerType _field331;
        CDUnknownFunctionPointerType _field332;
        CDUnknownFunctionPointerType _field333;
        CDUnknownFunctionPointerType _field334;
        CDUnknownFunctionPointerType _field335;
        CDUnknownFunctionPointerType _field336;
        CDUnknownFunctionPointerType _field337;
        CDUnknownFunctionPointerType _field338;
        CDUnknownFunctionPointerType _field339;
        CDUnknownFunctionPointerType _field340;
        CDUnknownFunctionPointerType _field341;
        CDUnknownFunctionPointerType _field342;
        CDUnknownFunctionPointerType _field343;
        CDUnknownFunctionPointerType _field344;
        CDUnknownFunctionPointerType _field345;
        CDUnknownFunctionPointerType _field346;
        CDUnknownFunctionPointerType _field347;
        CDUnknownFunctionPointerType _field348;
        CDUnknownFunctionPointerType _field349;
        CDUnknownFunctionPointerType _field350;
        CDUnknownFunctionPointerType _field351;
        CDUnknownFunctionPointerType _field352;
        CDUnknownFunctionPointerType _field353;
        CDUnknownFunctionPointerType _field354;
        CDUnknownFunctionPointerType _field355;
        CDUnknownFunctionPointerType _field356;
        CDUnknownFunctionPointerType _field357;
        CDUnknownFunctionPointerType _field358;
        CDUnknownFunctionPointerType _field359;
        CDUnknownFunctionPointerType _field360;
        CDUnknownFunctionPointerType _field361;
        CDUnknownFunctionPointerType _field362;
        CDUnknownFunctionPointerType _field363;
        CDUnknownFunctionPointerType _field364;
        CDUnknownFunctionPointerType _field365;
        CDUnknownFunctionPointerType _field366;
        CDUnknownFunctionPointerType _field367;
        CDUnknownFunctionPointerType _field368;
        CDUnknownFunctionPointerType _field369;
        CDUnknownFunctionPointerType _field370;
        CDUnknownFunctionPointerType _field371;
        CDUnknownFunctionPointerType _field372;
        CDUnknownFunctionPointerType _field373;
        CDUnknownFunctionPointerType _field374;
        CDUnknownFunctionPointerType _field375;
        CDUnknownFunctionPointerType _field376;
        CDUnknownFunctionPointerType _field377;
        CDUnknownFunctionPointerType _field378;
        CDUnknownFunctionPointerType _field379;
        CDUnknownFunctionPointerType _field380;
        CDUnknownFunctionPointerType _field381;
        CDUnknownFunctionPointerType _field382;
        CDUnknownFunctionPointerType _field383;
        CDUnknownFunctionPointerType _field384;
        CDUnknownFunctionPointerType _field385;
        CDUnknownFunctionPointerType _field386;
        CDUnknownFunctionPointerType _field387;
        CDUnknownFunctionPointerType _field388;
        CDUnknownFunctionPointerType _field389;
        CDUnknownFunctionPointerType _field390;
        CDUnknownFunctionPointerType _field391;
        CDUnknownFunctionPointerType _field392;
        CDUnknownFunctionPointerType _field393;
        CDUnknownFunctionPointerType _field394;
        CDUnknownFunctionPointerType _field395;
        CDUnknownFunctionPointerType _field396;
        CDUnknownFunctionPointerType _field397;
        CDUnknownFunctionPointerType _field398;
        CDUnknownFunctionPointerType _field399;
        CDUnknownFunctionPointerType _field400;
        CDUnknownFunctionPointerType _field401;
        CDUnknownFunctionPointerType _field402;
        CDUnknownFunctionPointerType _field403;
        CDUnknownFunctionPointerType _field404;
        CDUnknownFunctionPointerType _field405;
        CDUnknownFunctionPointerType _field406;
        CDUnknownFunctionPointerType _field407;
        CDUnknownFunctionPointerType _field408;
        CDUnknownFunctionPointerType _field409;
        CDUnknownFunctionPointerType _field410;
        CDUnknownFunctionPointerType _field411;
        CDUnknownFunctionPointerType _field412;
        CDUnknownFunctionPointerType _field413;
        CDUnknownFunctionPointerType _field414;
        CDUnknownFunctionPointerType _field415;
        CDUnknownFunctionPointerType _field416;
        CDUnknownFunctionPointerType _field417;
        CDUnknownFunctionPointerType _field418;
        CDUnknownFunctionPointerType _field419;
        CDUnknownFunctionPointerType _field420;
        CDUnknownFunctionPointerType _field421;
        CDUnknownFunctionPointerType _field422;
        CDUnknownFunctionPointerType _field423;
        CDUnknownFunctionPointerType _field424;
        CDUnknownFunctionPointerType _field425;
        CDUnknownFunctionPointerType _field426;
        CDUnknownFunctionPointerType _field427;
        CDUnknownFunctionPointerType _field428;
        CDUnknownFunctionPointerType _field429;
        CDUnknownFunctionPointerType _field430;
        CDUnknownFunctionPointerType _field431;
        CDUnknownFunctionPointerType _field432;
        CDUnknownFunctionPointerType _field433;
        CDUnknownFunctionPointerType _field434;
        CDUnknownFunctionPointerType _field435;
        CDUnknownFunctionPointerType _field436;
        CDUnknownFunctionPointerType _field437;
        CDUnknownFunctionPointerType _field438;
        CDUnknownFunctionPointerType _field439;
        CDUnknownFunctionPointerType _field440;
        CDUnknownFunctionPointerType _field441;
        CDUnknownFunctionPointerType _field442;
        CDUnknownFunctionPointerType _field443;
        CDUnknownFunctionPointerType _field444;
        CDUnknownFunctionPointerType _field445;
        CDUnknownFunctionPointerType _field446;
        CDUnknownFunctionPointerType _field447;
        CDUnknownFunctionPointerType _field448;
        CDUnknownFunctionPointerType _field449;
        CDUnknownFunctionPointerType _field450;
        CDUnknownFunctionPointerType _field451;
        CDUnknownFunctionPointerType _field452;
        CDUnknownFunctionPointerType _field453;
        CDUnknownFunctionPointerType _field454;
        CDUnknownFunctionPointerType _field455;
        CDUnknownFunctionPointerType _field456;
        CDUnknownFunctionPointerType _field457;
        CDUnknownFunctionPointerType _field458;
        CDUnknownFunctionPointerType _field459;
        CDUnknownFunctionPointerType _field460;
        CDUnknownFunctionPointerType _field461;
        CDUnknownFunctionPointerType _field462;
        CDUnknownFunctionPointerType _field463;
        CDUnknownFunctionPointerType _field464;
        CDUnknownFunctionPointerType _field465;
        CDUnknownFunctionPointerType _field466;
        CDUnknownFunctionPointerType _field467;
        CDUnknownFunctionPointerType _field468;
        CDUnknownFunctionPointerType _field469;
        CDUnknownFunctionPointerType _field470;
        CDUnknownFunctionPointerType _field471;
        CDUnknownFunctionPointerType _field472;
        CDUnknownFunctionPointerType _field473;
        CDUnknownFunctionPointerType _field474;
        CDUnknownFunctionPointerType _field475;
        CDUnknownFunctionPointerType _field476;
        CDUnknownFunctionPointerType _field477;
        CDUnknownFunctionPointerType _field478;
        CDUnknownFunctionPointerType _field479;
        CDUnknownFunctionPointerType _field480;
        CDUnknownFunctionPointerType _field481;
        CDUnknownFunctionPointerType _field482;
        CDUnknownFunctionPointerType _field483;
        CDUnknownFunctionPointerType _field484;
        CDUnknownFunctionPointerType _field485;
        CDUnknownFunctionPointerType _field486;
        CDUnknownFunctionPointerType _field487;
        CDUnknownFunctionPointerType _field488;
        CDUnknownFunctionPointerType _field489;
        CDUnknownFunctionPointerType _field490;
        CDUnknownFunctionPointerType _field491;
        CDUnknownFunctionPointerType _field492;
        CDUnknownFunctionPointerType _field493;
        CDUnknownFunctionPointerType _field494;
        CDUnknownFunctionPointerType _field495;
        CDUnknownFunctionPointerType _field496;
        CDUnknownFunctionPointerType _field497;
        CDUnknownFunctionPointerType _field498;
        CDUnknownFunctionPointerType _field499;
        CDUnknownFunctionPointerType _field500;
        CDUnknownFunctionPointerType _field501;
        CDUnknownFunctionPointerType _field502;
        CDUnknownFunctionPointerType _field503;
        CDUnknownFunctionPointerType _field504;
        CDUnknownFunctionPointerType _field505;
        CDUnknownFunctionPointerType _field506;
        CDUnknownFunctionPointerType _field507;
        CDUnknownFunctionPointerType _field508;
        CDUnknownFunctionPointerType _field509;
        CDUnknownFunctionPointerType _field510;
        CDUnknownFunctionPointerType _field511;
        CDUnknownFunctionPointerType _field512;
        CDUnknownFunctionPointerType _field513;
        CDUnknownFunctionPointerType _field514;
        CDUnknownFunctionPointerType _field515;
        CDUnknownFunctionPointerType _field516;
        CDUnknownFunctionPointerType _field517;
        CDUnknownFunctionPointerType _field518;
        CDUnknownFunctionPointerType _field519;
        CDUnknownFunctionPointerType _field520;
        CDUnknownFunctionPointerType _field521;
        CDUnknownFunctionPointerType _field522;
        CDUnknownFunctionPointerType _field523;
        CDUnknownFunctionPointerType _field524;
        CDUnknownFunctionPointerType _field525;
        CDUnknownFunctionPointerType _field526;
        CDUnknownFunctionPointerType _field527;
        CDUnknownFunctionPointerType _field528;
        CDUnknownFunctionPointerType _field529;
        CDUnknownFunctionPointerType _field530;
        CDUnknownFunctionPointerType _field531;
        CDUnknownFunctionPointerType _field532;
        CDUnknownFunctionPointerType _field533;
        CDUnknownFunctionPointerType _field534;
        CDUnknownFunctionPointerType _field535;
        CDUnknownFunctionPointerType _field536;
        CDUnknownFunctionPointerType _field537;
        CDUnknownFunctionPointerType _field538;
        CDUnknownFunctionPointerType _field539;
        CDUnknownFunctionPointerType _field540;
        CDUnknownFunctionPointerType _field541;
        CDUnknownFunctionPointerType _field542;
        CDUnknownFunctionPointerType _field543;
        CDUnknownFunctionPointerType _field544;
        CDUnknownFunctionPointerType _field545;
        CDUnknownFunctionPointerType _field546;
        CDUnknownFunctionPointerType _field547;
        CDUnknownFunctionPointerType _field548;
        CDUnknownFunctionPointerType _field549;
        CDUnknownFunctionPointerType _field550;
        CDUnknownFunctionPointerType _field551;
        CDUnknownFunctionPointerType _field552;
        CDUnknownFunctionPointerType _field553;
        CDUnknownFunctionPointerType _field554;
        CDUnknownFunctionPointerType _field555;
        CDUnknownFunctionPointerType _field556;
        CDUnknownFunctionPointerType _field557;
        CDUnknownFunctionPointerType _field558;
        CDUnknownFunctionPointerType _field559;
        CDUnknownFunctionPointerType _field560;
        CDUnknownFunctionPointerType _field561;
        CDUnknownFunctionPointerType _field562;
        CDUnknownFunctionPointerType _field563;
        CDUnknownFunctionPointerType _field564;
        CDUnknownFunctionPointerType _field565;
        CDUnknownFunctionPointerType _field566;
        CDUnknownFunctionPointerType _field567;
        CDUnknownFunctionPointerType _field568;
        CDUnknownFunctionPointerType _field569;
        CDUnknownFunctionPointerType _field570;
        CDUnknownFunctionPointerType _field571;
        CDUnknownFunctionPointerType _field572;
        CDUnknownFunctionPointerType _field573;
        CDUnknownFunctionPointerType _field574;
        CDUnknownFunctionPointerType _field575;
        CDUnknownFunctionPointerType _field576;
        CDUnknownFunctionPointerType _field577;
        CDUnknownFunctionPointerType _field578;
        CDUnknownFunctionPointerType _field579;
        CDUnknownFunctionPointerType _field580;
        CDUnknownFunctionPointerType _field581;
        CDUnknownFunctionPointerType _field582;
        CDUnknownFunctionPointerType _field583;
        CDUnknownFunctionPointerType _field584;
        CDUnknownFunctionPointerType _field585;
        CDUnknownFunctionPointerType _field586;
        CDUnknownFunctionPointerType _field587;
        CDUnknownFunctionPointerType _field588;
        CDUnknownFunctionPointerType _field589;
        CDUnknownFunctionPointerType _field590;
        CDUnknownFunctionPointerType _field591;
        CDUnknownFunctionPointerType _field592;
        CDUnknownFunctionPointerType _field593;
        CDUnknownFunctionPointerType _field594;
        CDUnknownFunctionPointerType _field595;
        CDUnknownFunctionPointerType _field596;
        CDUnknownFunctionPointerType _field597;
        CDUnknownFunctionPointerType _field598;
        CDUnknownFunctionPointerType _field599;
        CDUnknownFunctionPointerType _field600;
        CDUnknownFunctionPointerType _field601;
        CDUnknownFunctionPointerType _field602;
        CDUnknownFunctionPointerType _field603;
        CDUnknownFunctionPointerType _field604;
        CDUnknownFunctionPointerType _field605;
        CDUnknownFunctionPointerType _field606;
        CDUnknownFunctionPointerType _field607;
        CDUnknownFunctionPointerType _field608;
        CDUnknownFunctionPointerType _field609;
        CDUnknownFunctionPointerType _field610;
        CDUnknownFunctionPointerType _field611;
        CDUnknownFunctionPointerType _field612;
        CDUnknownFunctionPointerType _field613;
        CDUnknownFunctionPointerType _field614;
        CDUnknownFunctionPointerType _field615;
        CDUnknownFunctionPointerType _field616;
        CDUnknownFunctionPointerType _field617;
        CDUnknownFunctionPointerType _field618;
        CDUnknownFunctionPointerType _field619;
        CDUnknownFunctionPointerType _field620;
        CDUnknownFunctionPointerType _field621;
        CDUnknownFunctionPointerType _field622;
        CDUnknownFunctionPointerType _field623;
        CDUnknownFunctionPointerType _field624;
        CDUnknownFunctionPointerType _field625;
        CDUnknownFunctionPointerType _field626;
        CDUnknownFunctionPointerType _field627;
        CDUnknownFunctionPointerType _field628;
        CDUnknownFunctionPointerType _field629;
        CDUnknownFunctionPointerType _field630;
        CDUnknownFunctionPointerType _field631;
        CDUnknownFunctionPointerType _field632;
        CDUnknownFunctionPointerType _field633;
        CDUnknownFunctionPointerType _field634;
        CDUnknownFunctionPointerType _field635;
        CDUnknownFunctionPointerType _field636;
        CDUnknownFunctionPointerType _field637;
        CDUnknownFunctionPointerType _field638;
        CDUnknownFunctionPointerType _field639;
        CDUnknownFunctionPointerType _field640;
        CDUnknownFunctionPointerType _field641;
        CDUnknownFunctionPointerType _field642;
        CDUnknownFunctionPointerType _field643;
        CDUnknownFunctionPointerType _field644;
        CDUnknownFunctionPointerType _field645;
        CDUnknownFunctionPointerType _field646;
        CDUnknownFunctionPointerType _field647;
        CDUnknownFunctionPointerType _field648;
        CDUnknownFunctionPointerType _field649;
        CDUnknownFunctionPointerType _field650;
        CDUnknownFunctionPointerType _field651;
        CDUnknownFunctionPointerType _field652;
        CDUnknownFunctionPointerType _field653;
        CDUnknownFunctionPointerType _field654;
        CDUnknownFunctionPointerType _field655;
        CDUnknownFunctionPointerType _field656;
        CDUnknownFunctionPointerType _field657;
        CDUnknownFunctionPointerType _field658;
        CDUnknownFunctionPointerType _field659;
        CDUnknownFunctionPointerType _field660;
        CDUnknownFunctionPointerType _field661;
        CDUnknownFunctionPointerType _field662;
        CDUnknownFunctionPointerType _field663;
        CDUnknownFunctionPointerType _field664;
        CDUnknownFunctionPointerType _field665;
        CDUnknownFunctionPointerType _field666;
        CDUnknownFunctionPointerType _field667;
        CDUnknownFunctionPointerType _field668;
        CDUnknownFunctionPointerType _field669;
        CDUnknownFunctionPointerType _field670;
        CDUnknownFunctionPointerType _field671;
        CDUnknownFunctionPointerType _field672;
        CDUnknownFunctionPointerType _field673;
        CDUnknownFunctionPointerType _field674;
        CDUnknownFunctionPointerType _field675;
        CDUnknownFunctionPointerType _field676;
        CDUnknownFunctionPointerType _field677;
        CDUnknownFunctionPointerType _field678;
        CDUnknownFunctionPointerType _field679;
        CDUnknownFunctionPointerType _field680;
        CDUnknownFunctionPointerType _field681;
        CDUnknownFunctionPointerType _field682;
        CDUnknownFunctionPointerType _field683;
        CDUnknownFunctionPointerType _field684;
        CDUnknownFunctionPointerType _field685;
        CDUnknownFunctionPointerType _field686;
        CDUnknownFunctionPointerType _field687;
        CDUnknownFunctionPointerType _field688;
        CDUnknownFunctionPointerType _field689;
        CDUnknownFunctionPointerType _field690;
        CDUnknownFunctionPointerType _field691;
        CDUnknownFunctionPointerType _field692;
        CDUnknownFunctionPointerType _field693;
        CDUnknownFunctionPointerType _field694;
        CDUnknownFunctionPointerType _field695;
        CDUnknownFunctionPointerType _field696;
        CDUnknownFunctionPointerType _field697;
        CDUnknownFunctionPointerType _field698;
        CDUnknownFunctionPointerType _field699;
        CDUnknownFunctionPointerType _field700;
        CDUnknownFunctionPointerType _field701;
        CDUnknownFunctionPointerType _field702;
        CDUnknownFunctionPointerType _field703;
        CDUnknownFunctionPointerType _field704;
        CDUnknownFunctionPointerType _field705;
        CDUnknownFunctionPointerType _field706;
        CDUnknownFunctionPointerType _field707;
        CDUnknownFunctionPointerType _field708;
        CDUnknownFunctionPointerType _field709;
        CDUnknownFunctionPointerType _field710;
        CDUnknownFunctionPointerType _field711;
        CDUnknownFunctionPointerType _field712;
        CDUnknownFunctionPointerType _field713;
        CDUnknownFunctionPointerType _field714;
        CDUnknownFunctionPointerType _field715;
        CDUnknownFunctionPointerType _field716;
        CDUnknownFunctionPointerType _field717;
        CDUnknownFunctionPointerType _field718;
        CDUnknownFunctionPointerType _field719;
        CDUnknownFunctionPointerType _field720;
        CDUnknownFunctionPointerType _field721;
        CDUnknownFunctionPointerType _field722;
        CDUnknownFunctionPointerType _field723;
        CDUnknownFunctionPointerType _field724;
        CDUnknownFunctionPointerType _field725;
        CDUnknownFunctionPointerType _field726;
        CDUnknownFunctionPointerType _field727;
        CDUnknownFunctionPointerType _field728;
        CDUnknownFunctionPointerType _field729;
        CDUnknownFunctionPointerType _field730;
        CDUnknownFunctionPointerType _field731;
        CDUnknownFunctionPointerType _field732;
        CDUnknownFunctionPointerType _field733;
        CDUnknownFunctionPointerType _field734;
        CDUnknownFunctionPointerType _field735;
        CDUnknownFunctionPointerType _field736;
        CDUnknownFunctionPointerType _field737;
        CDUnknownFunctionPointerType _field738;
        CDUnknownFunctionPointerType _field739;
        CDUnknownFunctionPointerType _field740;
        CDUnknownFunctionPointerType _field741;
        CDUnknownFunctionPointerType _field742;
        CDUnknownFunctionPointerType _field743;
        CDUnknownFunctionPointerType _field744;
        CDUnknownFunctionPointerType _field745;
        CDUnknownFunctionPointerType _field746;
        CDUnknownFunctionPointerType _field747;
        CDUnknownFunctionPointerType _field748;
        CDUnknownFunctionPointerType _field749;
        CDUnknownFunctionPointerType _field750;
        CDUnknownFunctionPointerType _field751;
        CDUnknownFunctionPointerType _field752;
        CDUnknownFunctionPointerType _field753;
        CDUnknownFunctionPointerType _field754;
        CDUnknownFunctionPointerType _field755;
        CDUnknownFunctionPointerType _field756;
        CDUnknownFunctionPointerType _field757;
        CDUnknownFunctionPointerType _field758;
        CDUnknownFunctionPointerType _field759;
        CDUnknownFunctionPointerType _field760;
        CDUnknownFunctionPointerType _field761;
        CDUnknownFunctionPointerType _field762;
        CDUnknownFunctionPointerType _field763;
        CDUnknownFunctionPointerType _field764;
        CDUnknownFunctionPointerType _field765;
        CDUnknownFunctionPointerType _field766;
        CDUnknownFunctionPointerType _field767;
        CDUnknownFunctionPointerType _field768;
        CDUnknownFunctionPointerType _field769;
        CDUnknownFunctionPointerType _field770;
        CDUnknownFunctionPointerType _field771;
        CDUnknownFunctionPointerType _field772;
        CDUnknownFunctionPointerType _field773;
        CDUnknownFunctionPointerType _field774;
        CDUnknownFunctionPointerType _field775;
        CDUnknownFunctionPointerType _field776;
        CDUnknownFunctionPointerType _field777;
        CDUnknownFunctionPointerType _field778;
        CDUnknownFunctionPointerType _field779;
        CDUnknownFunctionPointerType _field780;
        CDUnknownFunctionPointerType _field781;
        CDUnknownFunctionPointerType _field782;
        CDUnknownFunctionPointerType _field783;
        CDUnknownFunctionPointerType _field784;
        CDUnknownFunctionPointerType _field785;
        CDUnknownFunctionPointerType _field786;
        CDUnknownFunctionPointerType _field787;
        CDUnknownFunctionPointerType _field788;
        CDUnknownFunctionPointerType _field789;
        CDUnknownFunctionPointerType _field790;
        CDUnknownFunctionPointerType _field791;
        CDUnknownFunctionPointerType _field792;
        CDUnknownFunctionPointerType _field793;
        CDUnknownFunctionPointerType _field794;
        CDUnknownFunctionPointerType _field795;
        CDUnknownFunctionPointerType _field796;
        CDUnknownFunctionPointerType _field797;
        CDUnknownFunctionPointerType _field798;
        CDUnknownFunctionPointerType _field799;
        CDUnknownFunctionPointerType _field800;
        CDUnknownFunctionPointerType _field801;
        CDUnknownFunctionPointerType _field802;
        CDUnknownFunctionPointerType _field803;
        CDUnknownFunctionPointerType _field804;
        CDUnknownFunctionPointerType _field805;
        CDUnknownFunctionPointerType _field806;
        CDUnknownFunctionPointerType _field807;
        CDUnknownFunctionPointerType _field808;
        CDUnknownFunctionPointerType _field809;
        CDUnknownFunctionPointerType _field810;
        CDUnknownFunctionPointerType _field811;
        CDUnknownFunctionPointerType _field812;
        CDUnknownFunctionPointerType _field813;
        CDUnknownFunctionPointerType _field814;
        CDUnknownFunctionPointerType _field815;
        CDUnknownFunctionPointerType _field816;
        CDUnknownFunctionPointerType _field817;
        CDUnknownFunctionPointerType _field818;
        CDUnknownFunctionPointerType _field819;
        CDUnknownFunctionPointerType _field820;
        CDUnknownFunctionPointerType _field821;
        CDUnknownFunctionPointerType _field822;
        CDUnknownFunctionPointerType _field823;
        CDUnknownFunctionPointerType _field824;
        CDUnknownFunctionPointerType _field825;
        CDUnknownFunctionPointerType _field826;
        CDUnknownFunctionPointerType _field827;
        CDUnknownFunctionPointerType _field828;
        CDUnknownFunctionPointerType _field829;
        CDUnknownFunctionPointerType _field830;
        CDUnknownFunctionPointerType _field831;
        CDUnknownFunctionPointerType _field832;
        CDUnknownFunctionPointerType _field833;
        CDUnknownFunctionPointerType _field834;
        CDUnknownFunctionPointerType _field835;
        CDUnknownFunctionPointerType _field836;
        CDUnknownFunctionPointerType _field837;
        CDUnknownFunctionPointerType _field838;
        CDUnknownFunctionPointerType _field839;
        CDUnknownFunctionPointerType _field840;
        CDUnknownFunctionPointerType _field841;
        CDUnknownFunctionPointerType _field842;
        CDUnknownFunctionPointerType _field843;
        CDUnknownFunctionPointerType _field844;
        CDUnknownFunctionPointerType _field845;
        CDUnknownFunctionPointerType _field846;
        CDUnknownFunctionPointerType _field847;
        CDUnknownFunctionPointerType _field848;
        CDUnknownFunctionPointerType _field849;
        CDUnknownFunctionPointerType _field850;
        CDUnknownFunctionPointerType _field851;
        CDUnknownFunctionPointerType _field852;
        CDUnknownFunctionPointerType _field853;
        CDUnknownFunctionPointerType _field854;
        CDUnknownFunctionPointerType _field855;
        CDUnknownFunctionPointerType _field856;
        CDUnknownFunctionPointerType _field857;
        CDUnknownFunctionPointerType _field858;
        CDUnknownFunctionPointerType _field859;
        CDUnknownFunctionPointerType _field860;
        CDUnknownFunctionPointerType _field861;
        CDUnknownFunctionPointerType _field862;
        CDUnknownFunctionPointerType _field863;
        CDUnknownFunctionPointerType _field864;
        CDUnknownFunctionPointerType _field865;
        CDUnknownFunctionPointerType _field866;
        CDUnknownFunctionPointerType _field867;
        CDUnknownFunctionPointerType _field868;
        CDUnknownFunctionPointerType _field869;
        CDUnknownFunctionPointerType _field870;
        CDUnknownFunctionPointerType _field871;
        CDUnknownFunctionPointerType _field872;
        CDUnknownFunctionPointerType _field873;
        CDUnknownFunctionPointerType _field874;
        CDUnknownFunctionPointerType _field875;
        CDUnknownFunctionPointerType _field876;
        CDUnknownFunctionPointerType _field877;
        CDUnknownFunctionPointerType _field878;
        CDUnknownFunctionPointerType _field879;
        CDUnknownFunctionPointerType _field880;
        CDUnknownFunctionPointerType _field881;
        CDUnknownFunctionPointerType _field882;
        CDUnknownFunctionPointerType _field883;
        CDUnknownFunctionPointerType _field884;
        CDUnknownFunctionPointerType _field885;
        CDUnknownFunctionPointerType _field886;
        CDUnknownFunctionPointerType _field887;
        CDUnknownFunctionPointerType _field888;
        CDUnknownFunctionPointerType _field889;
        CDUnknownFunctionPointerType _field890;
        CDUnknownFunctionPointerType _field891;
        CDUnknownFunctionPointerType _field892;
        CDUnknownFunctionPointerType _field893;
        CDUnknownFunctionPointerType _field894;
        CDUnknownFunctionPointerType _field895;
        CDUnknownFunctionPointerType _field896;
        CDUnknownFunctionPointerType _field897;
        CDUnknownFunctionPointerType _field898;
        CDUnknownFunctionPointerType _field899;
        CDUnknownFunctionPointerType _field900;
        CDUnknownFunctionPointerType _field901;
        CDUnknownFunctionPointerType _field902;
        CDUnknownFunctionPointerType _field903;
        CDUnknownFunctionPointerType _field904;
        CDUnknownFunctionPointerType _field905;
        CDUnknownFunctionPointerType _field906;
        CDUnknownFunctionPointerType _field907;
        CDUnknownFunctionPointerType _field908;
        CDUnknownFunctionPointerType _field909;
        CDUnknownFunctionPointerType _field910;
        CDUnknownFunctionPointerType _field911;
        CDUnknownFunctionPointerType _field912;
        CDUnknownFunctionPointerType _field913;
        CDUnknownFunctionPointerType _field914;
        CDUnknownFunctionPointerType _field915;
        CDUnknownFunctionPointerType _field916;
        CDUnknownFunctionPointerType _field917;
        CDUnknownFunctionPointerType _field918;
        CDUnknownFunctionPointerType _field919;
        CDUnknownFunctionPointerType _field920;
        CDUnknownFunctionPointerType _field921;
        CDUnknownFunctionPointerType _field922;
        CDUnknownFunctionPointerType _field923;
        CDUnknownFunctionPointerType _field924;
        CDUnknownFunctionPointerType _field925;
        CDUnknownFunctionPointerType _field926;
        CDUnknownFunctionPointerType _field927;
        CDUnknownFunctionPointerType _field928;
        CDUnknownFunctionPointerType _field929;
        CDUnknownFunctionPointerType _field930;
        CDUnknownFunctionPointerType _field931;
        CDUnknownFunctionPointerType _field932;
        CDUnknownFunctionPointerType _field933;
        CDUnknownFunctionPointerType _field934;
        CDUnknownFunctionPointerType _field935;
        CDUnknownFunctionPointerType _field936;
        CDUnknownFunctionPointerType _field937;
        CDUnknownFunctionPointerType _field938;
        CDUnknownFunctionPointerType _field939;
        CDUnknownFunctionPointerType _field940;
        CDUnknownFunctionPointerType _field941;
        CDUnknownFunctionPointerType _field942;
        CDUnknownFunctionPointerType _field943;
        CDUnknownFunctionPointerType _field944;
        CDUnknownFunctionPointerType _field945;
        CDUnknownFunctionPointerType _field946;
        CDUnknownFunctionPointerType _field947;
        CDUnknownFunctionPointerType _field948;
        CDUnknownFunctionPointerType _field949;
        CDUnknownFunctionPointerType _field950;
        CDUnknownFunctionPointerType _field951;
        CDUnknownFunctionPointerType _field952;
        CDUnknownFunctionPointerType _field953;
        CDUnknownFunctionPointerType _field954;
        CDUnknownFunctionPointerType _field955;
        CDUnknownFunctionPointerType _field956;
        CDUnknownFunctionPointerType _field957;
        CDUnknownFunctionPointerType _field958;
        CDUnknownFunctionPointerType _field959;
        CDUnknownFunctionPointerType _field960;
        CDUnknownFunctionPointerType _field961;
        CDUnknownFunctionPointerType _field962;
        CDUnknownFunctionPointerType _field963;
        CDUnknownFunctionPointerType _field964;
        CDUnknownFunctionPointerType _field965;
        CDUnknownFunctionPointerType _field966;
        CDUnknownFunctionPointerType _field967;
        CDUnknownFunctionPointerType _field968;
        CDUnknownFunctionPointerType _field969;
        CDUnknownFunctionPointerType _field970;
        CDUnknownFunctionPointerType _field971;
        CDUnknownFunctionPointerType _field972;
        CDUnknownFunctionPointerType _field973;
        CDUnknownFunctionPointerType _field974;
    } _field2;
    struct _CGLPrivateObject *_field3;
    void *_field4;
};

struct _CGLPrivateObject;

struct _GEOTileKey {
    unsigned int z:6;
    unsigned int x:26;
    unsigned int y:26;
    unsigned int type:6;
    unsigned int pixelSize:8;
    unsigned int textScale:8;
    unsigned int provider:8;
    unsigned int expires:1;
    unsigned int reserved1:7;
    unsigned char reserved2[4];
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _VGLColor {
    float r;
    float g;
    float b;
    float a;
};

struct _VKRealisticPolygonMetaData;

struct __hash_node<int, void *>;

struct __hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>;

struct __hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>;

struct __hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>;

struct __hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>;

struct __hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>;

struct __hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>;

struct __hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>;

struct __hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>;

struct __hash_node<std::__1::pair<unsigned long, unsigned long>, void *>;

struct __hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>;

struct __list_node<VGLRouteLineMesh *, void *>;

struct __list_node<VKRouteLineToMeshPathMap::Range, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _release_objc;

struct _retain_objc;

struct _retain_ptr<const __CFString *, geo::_retain_cf<const __CFString *>, geo::_release_cf> {
    CDUnknownFunctionPointerType *_field1;
    struct __CFString *_field2;
    struct _retain_cf<const __CFString *> _field3;
    struct _release_cf _field4;
};

struct bitset<16> {
    unsigned long long __first_;
};

struct bitset<32> {
    unsigned long long __first_;
};

struct deque<std::__1::shared_ptr<vk::InfoOcclusionQuery>, vk_allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery>>> {
    struct __split_buffer<std::__1::shared_ptr<vk::InfoOcclusionQuery>*, vk_allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery>*>> {
        struct shared_ptr<vk::InfoOcclusionQuery> **_field1;
        struct shared_ptr<vk::InfoOcclusionQuery> **_field2;
        struct shared_ptr<vk::InfoOcclusionQuery> **_field3;
        struct __compressed_pair<std::__1::shared_ptr<vk::InfoOcclusionQuery>**, vk_allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery>*>> {
            struct shared_ptr<vk::InfoOcclusionQuery> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, vk_allocator<std::__1::shared_ptr<vk::InfoOcclusionQuery>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<unsigned int, vk_allocator<unsigned int>> {
    struct __split_buffer<unsigned int *, vk_allocator<unsigned int *>> {
        unsigned int **_field1;
        unsigned int **_field2;
        unsigned int **_field3;
        struct __compressed_pair<unsigned int **, vk_allocator<unsigned int *>> {
            unsigned int **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, vk_allocator<unsigned int>> {
        unsigned long long _field1;
    } _field3;
};

struct function<void (const vk::RoadPiece &)> {
    struct type _field1;
    struct __base<void (const vk::RoadPiece &)> *_field2;
};

struct list<VGLRouteLineMesh *, vk_allocator<VGLRouteLineMesh *>> {
    struct __list_node_base<VGLRouteLineMesh *, void *> {
        struct __list_node<VGLRouteLineMesh *, void *> *_field1;
        struct __list_node<VGLRouteLineMesh *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, vk_allocator<std::__1::__list_node<VGLRouteLineMesh *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<VKRouteLineToMeshPathMap::Range, vk_allocator<VKRouteLineToMeshPathMap::Range>> {
    struct __list_node_base<VKRouteLineToMeshPathMap::Range, void *> {
        struct __list_node<VKRouteLineToMeshPathMap::Range, void *> *_field1;
        struct __list_node<VKRouteLineToMeshPathMap::Range, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, vk_allocator<std::__1::__list_node<VKRouteLineToMeshPathMap::Range, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, vk_allocator<std::__1::pair<VKLabelDrawStyle *const, std::__1::shared_ptr<vk::LabelStyle>>>> {
    struct __tree<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>>, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true>, vk_allocator<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>>>> {
        struct __tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::pair<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKLabelDrawStyle *, std::__1::shared_ptr<vk::LabelStyle>, std::__1::less<VKLabelDrawStyle *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>, std::__1::less<VKPolylineOverlay *>, vk_allocator<std::__1::pair<VKPolylineOverlay *const, std::__1::weak_ptr<altitude::RouteLineData>>>> {
    struct __tree<std::__1::pair<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>>, std::__1::__map_value_compare<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>, std::__1::less<VKPolylineOverlay *>, true>, vk_allocator<std::__1::pair<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>>>> {
        struct __tree_node<std::__1::pair<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::pair<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>, std::__1::less<VKPolylineOverlay *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int>>, vk_allocator<std::__1::pair<const std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>>>> {
    struct __tree<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>>, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int>>, true>, vk_allocator<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>>>> {
        struct __tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long long, unsigned int>, std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::pair<unsigned long long, unsigned int>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<vk::Anchor *, float, std::__1::less<vk::Anchor *>, std::__1::allocator<std::__1::pair<vk::Anchor *const, float>>> {
    struct __tree<std::__1::pair<vk::Anchor *, float>, std::__1::__map_value_compare<vk::Anchor *, float, std::__1::less<vk::Anchor *>, true>, std::__1::allocator<std::__1::pair<vk::Anchor *, float>>> {
        struct __tree_node<std::__1::pair<vk::Anchor *, float>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<vk::Anchor *, float>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::Anchor *, float, std::__1::less<vk::Anchor *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>>> {
    struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>>> {
        struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::PointLabelFeature>::Less, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, vk_allocator<std::__1::pair<const vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>>> {
    struct __tree<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true>, vk_allocator<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>>> {
        struct __tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::pair<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Key, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Value, vk::InfoLabelFeaturePool::FeaturePoolEntry<vk::RoadLabelFeature>::Less, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct pair<unsigned int, VKRibbonMultiPolylineSegment *>;

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct routelineTrafficSegment;

struct set<std::__1::weak_ptr<vk::PointLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::PointLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::PointLabelFeature>>> {
    struct __tree<std::__1::weak_ptr<vk::PointLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::PointLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::PointLabelFeature>>> {
        struct __tree_node<std::__1::weak_ptr<vk::PointLabelFeature>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::weak_ptr<vk::PointLabelFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::owner_less<std::__1::weak_ptr<vk::PointLabelFeature>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<std::__1::weak_ptr<vk::RoadLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::RoadLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::RoadLabelFeature>>> {
    struct __tree<std::__1::weak_ptr<vk::RoadLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::RoadLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::RoadLabelFeature>>> {
        struct __tree_node<std::__1::weak_ptr<vk::RoadLabelFeature>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::weak_ptr<vk::RoadLabelFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::owner_less<std::__1::weak_ptr<vk::RoadLabelFeature>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<VGLMeshNode> {
    struct VGLMeshNode *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<bool> {
    _Bool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>> {
    struct vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<geo::MapEdge> {
    struct MapEdge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::Anchor> {
    struct Anchor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::AnchorContext> {
    struct AnchorContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::AnchorFactory> {
    struct AnchorFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::FontAtlasPage> {
    struct FontAtlasPage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<vk::GlobeAdapterData> {
    struct GlobeAdapterData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<vk::InfoLabel> {
    struct InfoLabel *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::InfoMapTile> {
    struct InfoMapTile *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::InfoOcclusionQuery>;

struct shared_ptr<vk::LabelFeature> {
    struct LabelFeature *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<vk::LabelIcon>;

struct shared_ptr<vk::LabelManager> {
    struct LabelManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::LabelManagerNotifierHook> {
    struct LabelManagerNotifierHook *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<vk::LabelTrafficTilePool> {
    struct LabelTrafficTilePool *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<vk::NavLabel> {
    struct NavLabel *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::TrafficIncidentLabelFeature>;

struct shared_ptr<vk::VKGlobeStylesheet> {
    struct VKGlobeStylesheet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vk::ViewTransform> {
    struct ViewTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<zilch::TrafficDynamicTile> {
    struct TrafficDynamicTile *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<std::__1::__hash_node<int, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<int, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<int, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<int, void *>*>>> {
        struct __hash_node<int, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<int, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<int, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*>>> {
        struct __hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *> **_field1;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*>>> {
        struct __hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*>>> {
        struct __hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*>>> {
        struct __hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*>>> {
        struct __hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>>> {
        struct __hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *> **_field1;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned long, unsigned long>, void *> **__first_;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>**, std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *> **_field1;
        struct __bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*>> {
            struct __compressed_pair<unsigned long, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<vk::SnappedPathMapMatchingSection, std::__1::default_delete<vk::SnappedPathMapMatchingSection>> {
    struct __compressed_pair<vk::SnappedPathMapMatchingSection *, std::__1::default_delete<vk::SnappedPathMapMatchingSection>> {
        struct SnappedPathMapMatchingSection *__first_;
    } __ptr_;
};

struct unordered_map<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry, std::__1::hash<GEOVectorTile *>, std::__1::equal_to<GEOVectorTile *>, vk_allocator<std::__1::pair<GEOVectorTile *const, vk::InfoLabelFeaturePool::TileFeatureValueEntry>>> {
    struct __hash_table<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, std::__1::__unordered_map_hasher<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry, std::__1::hash<GEOVectorTile *>, true>, std::__1::__unordered_map_equal<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry, std::__1::equal_to<GEOVectorTile *>, true>, vk_allocator<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *>*> {
                struct __hash_node<std::__1::pair<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry, std::__1::hash<GEOVectorTile *>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<GEOVectorTile *, vk::InfoLabelFeaturePool::TileFeatureValueEntry, std::__1::equal_to<GEOVectorTile *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>, std::__1::hash<VKPolylineOverlaySection *>, std::__1::equal_to<VKPolylineOverlaySection *>, vk_allocator<std::__1::pair<VKPolylineOverlaySection *const, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>>> {
    struct __hash_table<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, std::__1::__unordered_map_hasher<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>, std::__1::hash<VKPolylineOverlaySection *>, true>, std::__1::__unordered_map_equal<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>, std::__1::equal_to<VKPolylineOverlaySection *>, true>, vk_allocator<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *>*> {
                struct __hash_node<std::__1::pair<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>, std::__1::hash<VKPolylineOverlaySection *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<VKPolylineOverlaySection *, std::__1::vector<VGLRect, vk_allocator<VGLRect>>, std::__1::equal_to<VKPolylineOverlaySection *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, vk_allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList>>> {
    struct __hash_table<std::__1::pair<VKVectorTile *, OccluderGroupList>, std::__1::__unordered_map_hasher<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, true>, std::__1::__unordered_map_equal<VKVectorTile *, OccluderGroupList, std::__1::equal_to<VKVectorTile *>, true>, vk_allocator<std::__1::pair<VKVectorTile *, OccluderGroupList>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *>*> {
                struct __hash_node<std::__1::pair<VKVectorTile *, OccluderGroupList>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<VKVectorTile *, OccluderGroupList, std::__1::equal_to<VKVectorTile *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>, std::__1::hash<long>, std::__1::equal_to<long>, vk_allocator<std::__1::pair<const long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>>> {
    struct __hash_table<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, std::__1::__unordered_map_hasher<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>, std::__1::equal_to<long>, true>, vk_allocator<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *>*> {
                struct __hash_node<std::__1::pair<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, vk_allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>>> {
    struct __hash_table<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::equal_to<std::__1::basic_string<char>>, true>, vk_allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*> {
                struct __hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, vk_allocator<std::__1::pair<const unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>>> {
    struct __hash_table<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::equal_to<unsigned long>, true>, vk_allocator<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long, unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, vk_allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __hash_table<std::__1::pair<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, unsigned long, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, unsigned long, std::__1::equal_to<unsigned long>, true>, vk_allocator<std::__1::pair<unsigned long, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, unsigned long>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long, unsigned long>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, unsigned long, std::__1::hash<unsigned long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, unsigned long, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, vk::BuildingTopMeshFactory::Group, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, vk_allocator<std::__1::pair<const unsigned long, vk::BuildingTopMeshFactory::Group>>> {
    struct __hash_table<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, std::__1::__unordered_map_hasher<unsigned long, vk::BuildingTopMeshFactory::Group, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, vk::BuildingTopMeshFactory::Group, std::__1::equal_to<unsigned long>, true>, vk_allocator<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long, vk::BuildingTopMeshFactory::Group>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, vk::BuildingTopMeshFactory::Group, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, vk::BuildingTopMeshFactory::Group, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<long long, const zilch::TrafficDynamicTile::Flow *, std::__1::hash<long long>, std::__1::equal_to<long long>, vk_allocator<std::__1::pair<const long long, const zilch::TrafficDynamicTile::Flow *>>> {
    struct __hash_table<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, std::__1::__unordered_map_hasher<long long, const zilch::TrafficDynamicTile::Flow *, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, const zilch::TrafficDynamicTile::Flow *, std::__1::equal_to<long long>, true>, vk_allocator<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *>*> {
                struct __hash_node<std::__1::pair<long long, const zilch::TrafficDynamicTile::Flow *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, const zilch::TrafficDynamicTile::Flow *, std::__1::hash<long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, const zilch::TrafficDynamicTile::Flow *, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_multimap<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, vk_allocator<std::__1::pair<const unsigned int, VKRibbonMultiPolylineSegment *>>> {
    struct __hash_table<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, std::__1::__unordered_map_hasher<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::equal_to<unsigned int>, true>, vk_allocator<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, vk_allocator<int>> {
    struct __hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, vk_allocator<int>> {
        struct unique_ptr<std::__1::__hash_node<int, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<int, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>, vk_allocator<std::__1::__hash_node<int, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<int, void *>*> {
                struct __hash_node<int, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<int>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<int>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<GEOLocationCoordinate2D, vk_allocator<GEOLocationCoordinate2D>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<GEOLocationCoordinate2D *, vk_allocator<GEOLocationCoordinate2D>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<LabelNavJunctionInfo, vk_allocator<LabelNavJunctionInfo>> {
    struct LabelNavJunctionInfo *__begin_;
    struct LabelNavJunctionInfo *__end_;
    struct __compressed_pair<LabelNavJunctionInfo *, vk_allocator<LabelNavJunctionInfo>> {
        struct LabelNavJunctionInfo *__first_;
    } __end_cap_;
};

struct vector<LineDash, vk_allocator<LineDash>> {
    struct LineDash *__begin_;
    struct LineDash *__end_;
    struct __compressed_pair<LineDash *, vk_allocator<LineDash>> {
        struct LineDash *__first_;
    } __end_cap_;
};

struct vector<LineStipple, vk_allocator<LineStipple>> {
    struct LineStipple *__begin_;
    struct LineStipple *__end_;
    struct __compressed_pair<LineStipple *, vk_allocator<LineStipple>> {
        struct LineStipple *__first_;
    } __end_cap_;
};

struct vector<PolygonRenderStep, vk_allocator<PolygonRenderStep>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<PolygonRenderStep *, vk_allocator<PolygonRenderStep>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<RouteJunctionInfo, vk_allocator<RouteJunctionInfo>> {
    struct RouteJunctionInfo *_field1;
    struct RouteJunctionInfo *_field2;
    struct __compressed_pair<RouteJunctionInfo *, vk_allocator<RouteJunctionInfo>> {
        struct RouteJunctionInfo *_field1;
    } _field3;
};

struct vector<RouteSegment, vk_allocator<RouteSegment>> {
    struct RouteSegment *__begin_;
    struct RouteSegment *__end_;
    struct __compressed_pair<RouteSegment *, vk_allocator<RouteSegment>> {
        struct RouteSegment *__first_;
    } __end_cap_;
};

struct vector<TrafficSegment, vk_allocator<TrafficSegment>> {
    struct TrafficSegment *__begin_;
    struct TrafficSegment *__end_;
    struct __compressed_pair<TrafficSegment *, vk_allocator<TrafficSegment>> {
        struct TrafficSegment *__first_;
    } __end_cap_;
};

struct vector<UniformHandle, vk_allocator<UniformHandle>> {
    struct UniformHandle *__begin_;
    struct UniformHandle *__end_;
    struct __compressed_pair<UniformHandle *, vk_allocator<UniformHandle>> {
        struct UniformHandle *__first_;
    } __end_cap_;
};

struct vector<VGLArrowMeshInfo, vk_allocator<VGLArrowMeshInfo>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VGLArrowMeshInfo *, vk_allocator<VGLArrowMeshInfo>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<VGLGroupInfo, vk_allocator<VGLGroupInfo>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VGLGroupInfo *, vk_allocator<VGLGroupInfo>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<VGLMeshLeafNode, vk_allocator<VGLMeshLeafNode>> {
    struct VGLMeshLeafNode *__begin_;
    struct VGLMeshLeafNode *__end_;
    struct __compressed_pair<VGLMeshLeafNode *, vk_allocator<VGLMeshLeafNode>> {
        struct VGLMeshLeafNode *__first_;
    } __end_cap_;
};

struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<VGLMeshVendor **, vk_allocator<VGLMeshVendor *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<VGLRect, vk_allocator<VGLRect>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VGLRect *, vk_allocator<VGLRect>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<VKBuildingHeightMap, vk_allocator<VKBuildingHeightMap>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VKBuildingHeightMap *, vk_allocator<VKBuildingHeightMap>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<VKMapTile *, vk_allocator<VKMapTile *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<VKMapTile **, vk_allocator<VKMapTile *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<VKRibbonMultiPolylineSegment, vk_allocator<VKRibbonMultiPolylineSegment>> {
    struct VKRibbonMultiPolylineSegment *__begin_;
    struct VKRibbonMultiPolylineSegment *__end_;
    struct __compressed_pair<VKRibbonMultiPolylineSegment *, vk_allocator<VKRibbonMultiPolylineSegment>> {
        struct VKRibbonMultiPolylineSegment *__first_;
    } __end_cap_;
};

struct vector<VKRibbonPolylineSegment, vk_allocator<VKRibbonPolylineSegment>> {
    struct VKRibbonPolylineSegment *_field1;
    struct VKRibbonPolylineSegment *_field2;
    struct __compressed_pair<VKRibbonPolylineSegment *, vk_allocator<VKRibbonPolylineSegment>> {
        struct VKRibbonPolylineSegment *_field1;
    } _field3;
};

struct vector<_VKRealisticPolygonMetaData, vk_allocator<_VKRealisticPolygonMetaData>> {
    struct _VKRealisticPolygonMetaData *__begin_;
    struct _VKRealisticPolygonMetaData *__end_;
    struct __compressed_pair<_VKRealisticPolygonMetaData *, vk_allocator<_VKRealisticPolygonMetaData>> {
        struct _VKRealisticPolygonMetaData *__first_;
    } __end_cap_;
};

struct vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>> {
    struct DiscontinuityEdgeInfo **_field1;
    struct DiscontinuityEdgeInfo **_field2;
    struct __compressed_pair<const vk::DiscontinuityEdgeInfo **, vk_allocator<const vk::DiscontinuityEdgeInfo *>> {
        struct DiscontinuityEdgeInfo **_field1;
    } _field3;
};

struct vector<double, vk_allocator<double>> {
    double *_field1;
    double *_field2;
    struct __compressed_pair<double *, vk_allocator<double>> {
        double *_field1;
    } _field3;
};

struct vector<geo::PolylineCoordinate, vk_allocator<geo::PolylineCoordinate>> {
    struct PolylineCoordinate *__begin_;
    struct PolylineCoordinate *__end_;
    struct __compressed_pair<geo::PolylineCoordinate *, vk_allocator<geo::PolylineCoordinate>> {
        struct PolylineCoordinate *__first_;
    } __end_cap_;
};

struct vector<geo::Vec2Imp<double>, vk_allocator<geo::Vec2Imp<double>>> {
    struct Vec2Imp<double> *__begin_;
    struct Vec2Imp<double> *__end_;
    struct __compressed_pair<geo::Vec2Imp<double>*, vk_allocator<geo::Vec2Imp<double>>> {
        struct Vec2Imp<double> *__first_;
    } __end_cap_;
};

struct vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>> {
    Vec2Imp_1782d7e3 *__begin_;
    Vec2Imp_1782d7e3 *__end_;
    struct __compressed_pair<geo::Vec2Imp<float>*, vk_allocator<geo::Vec2Imp<float>>> {
        Vec2Imp_1782d7e3 *__first_;
    } __end_cap_;
};

struct vector<int, vk_allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, vk_allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<routelineTrafficSegment, vk_allocator<routelineTrafficSegment>> {
    struct routelineTrafficSegment *__begin_;
    struct routelineTrafficSegment *__end_;
    struct __compressed_pair<routelineTrafficSegment *, vk_allocator<routelineTrafficSegment>> {
        struct routelineTrafficSegment *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, vk_allocator<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>>> {
    struct pair<unsigned int, VKRibbonMultiPolylineSegment *> *__begin_;
    struct pair<unsigned int, VKRibbonMultiPolylineSegment *> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>*, vk_allocator<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>>> {
        struct pair<unsigned int, VKRibbonMultiPolylineSegment *> *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<vk::FontAtlasPage>, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage>>> {
    struct shared_ptr<vk::FontAtlasPage> *_field1;
    struct shared_ptr<vk::FontAtlasPage> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<vk::FontAtlasPage>*, vk_allocator<std::__1::shared_ptr<vk::FontAtlasPage>>> {
        struct shared_ptr<vk::FontAtlasPage> *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<vk::InfoLabel>, vk_allocator<std::__1::shared_ptr<vk::InfoLabel>>> {
    shared_ptr_0c41964b *_field1;
    shared_ptr_0c41964b *_field2;
    struct __compressed_pair<std::__1::shared_ptr<vk::InfoLabel>*, vk_allocator<std::__1::shared_ptr<vk::InfoLabel>>> {
        shared_ptr_0c41964b *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile>>> {
    shared_ptr_a619b154 *__begin_;
    shared_ptr_a619b154 *__end_;
    struct __compressed_pair<std::__1::shared_ptr<vk::InfoMapTile>*, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile>>> {
        shared_ptr_a619b154 *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<vk::LabelIcon>, vk_allocator<std::__1::shared_ptr<vk::LabelIcon>>> {
    struct shared_ptr<vk::LabelIcon> *_field1;
    struct shared_ptr<vk::LabelIcon> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<vk::LabelIcon>*, vk_allocator<std::__1::shared_ptr<vk::LabelIcon>>> {
        struct shared_ptr<vk::LabelIcon> *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel>>> {
    shared_ptr_338aa11d *__begin_;
    shared_ptr_338aa11d *__end_;
    struct __compressed_pair<std::__1::shared_ptr<vk::NavLabel>*, vk_allocator<std::__1::shared_ptr<vk::NavLabel>>> {
        shared_ptr_338aa11d *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>>> {
    struct shared_ptr<vk::TrafficIncidentLabelFeature> *_field1;
    struct shared_ptr<vk::TrafficIncidentLabelFeature> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>*, vk_allocator<std::__1::shared_ptr<vk::TrafficIncidentLabelFeature>>> {
        struct shared_ptr<vk::TrafficIncidentLabelFeature> *_field1;
    } _field3;
};

struct vector<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>, vk_allocator<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>>> {
    struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> *__begin_;
    struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> *__end_;
    struct __compressed_pair<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>*, vk_allocator<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>>> {
        struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> *__first_;
    } __end_cap_;
};

struct vector<unsigned long, vk_allocator<unsigned long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long *, vk_allocator<unsigned long>> {
        unsigned long long *_field1;
    } _field3;
};

struct vector<vk::CollisionItem, vk_allocator<vk::CollisionItem>> {
    struct CollisionItem *_field1;
    struct CollisionItem *_field2;
    struct __compressed_pair<vk::CollisionItem *, vk_allocator<vk::CollisionItem>> {
        struct CollisionItem *_field1;
    } _field3;
};

struct vector<vk::CollisionPair, vk_allocator<vk::CollisionPair>> {
    struct CollisionPair *_field1;
    struct CollisionPair *_field2;
    struct __compressed_pair<vk::CollisionPair *, vk_allocator<vk::CollisionPair>> {
        struct CollisionPair *_field1;
    } _field3;
};

struct vector<vk::IconLabelPart *, vk_allocator<vk::IconLabelPart *>> {
    struct IconLabelPart **_field1;
    struct IconLabelPart **_field2;
    struct __compressed_pair<vk::IconLabelPart **, vk_allocator<vk::IconLabelPart *>> {
        struct IconLabelPart **_field1;
    } _field3;
};

struct vector<vk::InfoLabel *, vk_allocator<vk::InfoLabel *>> {
    struct InfoLabel **_field1;
    struct InfoLabel **_field2;
    struct __compressed_pair<vk::InfoLabel **, vk_allocator<vk::InfoLabel *>> {
        struct InfoLabel **_field1;
    } _field3;
};

struct vector<vk::LabelMesh::BufferRange, vk_allocator<vk::LabelMesh::BufferRange>> {
    struct BufferRange *_field1;
    struct BufferRange *_field2;
    struct __compressed_pair<vk::LabelMesh::BufferRange *, vk_allocator<vk::LabelMesh::BufferRange>> {
        struct BufferRange *_field1;
    } _field3;
};

struct vector<vk::RouteLineSection, vk_allocator<vk::RouteLineSection>> {
    struct RouteLineSection *__begin_;
    struct RouteLineSection *__end_;
    struct __compressed_pair<vk::RouteLineSection *, vk_allocator<vk::RouteLineSection>> {
        struct RouteLineSection *__first_;
    } __end_cap_;
};

struct vector<vk::RouteLineSection::Arrow, vk_allocator<vk::RouteLineSection::Arrow>> {
    struct Arrow *_field1;
    struct Arrow *_field2;
    struct __compressed_pair<vk::RouteLineSection::Arrow *, vk_allocator<vk::RouteLineSection::Arrow>> {
        struct Arrow *_field1;
    } _field3;
};

struct vector<vk::RouteLineSection::Vertex, vk_allocator<vk::RouteLineSection::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<vk::RouteLineSection::Vertex *, vk_allocator<vk::RouteLineSection::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<vk::TextLabelPart *, vk_allocator<vk::TextLabelPart *>> {
    struct TextLabelPart **_field1;
    struct TextLabelPart **_field2;
    struct __compressed_pair<vk::TextLabelPart **, vk_allocator<vk::TextLabelPart *>> {
        struct TextLabelPart **_field1;
    } _field3;
};

struct vector<vk::TileExclusionArea, std::__1::allocator<vk::TileExclusionArea>> {
    struct TileExclusionArea *__begin_;
    struct TileExclusionArea *__end_;
    struct __compressed_pair<vk::TileExclusionArea *, std::__1::allocator<vk::TileExclusionArea>> {
        struct TileExclusionArea *__first_;
    } __end_cap_;
};

struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad>> {
    struct IndicesQuad *_field1;
    struct IndicesQuad *_field2;
    struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::IndicesQuad>> {
        struct IndicesQuad *_field1;
    } _field3;
};

struct vector<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad>> {
    struct VertexQuad *_field1;
    struct VertexQuad *_field2;
    struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLIconMeshVertex, 40>::VertexQuad>> {
        struct VertexQuad *_field1;
    } _field3;
};

struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad>> {
    struct IndicesQuad *_field1;
    struct IndicesQuad *_field2;
    struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::IndicesQuad>> {
        struct IndicesQuad *_field1;
    } _field3;
};

struct vector<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad>> {
    struct VertexQuad *_field1;
    struct VertexQuad *_field2;
    struct __compressed_pair<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad *, vk_allocator<vk::VGLQuadMeshVAO<vk::VGLTextMeshVertex, 1000>::VertexQuad>> {
        struct VertexQuad *_field1;
    } _field3;
};

struct vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>;

struct vector<zilch::TrafficSkeletonTile::Record, std::__1::allocator<zilch::TrafficSkeletonTile::Record>> {
    struct Record *__begin_;
    struct Record *__end_;
    struct __compressed_pair<zilch::TrafficSkeletonTile::Record *, std::__1::allocator<zilch::TrafficSkeletonTile::Record>> {
        struct Record *__first_;
    } __end_cap_;
};

struct weak_ptr<vk::LabelManager> {
    struct LabelManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#if 0
// Names with conflicting types:
typedef struct {
    double _course;
    double _referenceScreenOffset;
    double _pitch;
    double _boomLength;
} State_3e0671f0;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct VKPoint _field2;
    struct {
        double _field1;
        double _field2;
    } _field3;
    id _field4;
} Anchor_facb9ede;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    char *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned int _field7;
    unsigned long long _field8;
    char _field9;
    unsigned long long _field10;
    float _field11;
    id _field12;
    int _field13;
} CDStruct_bb4da4be;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
} CDStruct_32a7f38a;

typedef struct {
    unsigned int _field1;
    int _field2;
    int *_field3;
    unsigned long long _field4;
} CDStruct_00eb6f1a;

typedef struct {
    unsigned int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
} CDStruct_6adf2384;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double v[4][4];
} CDStruct_aa5aacbc;

typedef struct {
    unsigned int *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_9f2792e4;

typedef struct {
    float *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_fae3dc92;

typedef struct {
    int *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_95bda58d;

typedef struct {
    char orthographic;
    double width;
    double height;
    double near;
    double far;
} CDStruct_17faa5b0;

typedef struct {
    char _field1;
    float _field2;
    float _field3;
} CDStruct_32f014a0;

typedef struct {
    double latitude;
    double longitude;
    double altitude;
} CDStruct_071ac149;

typedef struct {
    float _a;
    unsigned int _b;
    unsigned int _g;
    unsigned int _r;
} CDStruct_58ec0031;

typedef struct {
    float x0;
    float x1;
    float y0;
    float y1;
    float z0;
    float z1;
} CDStruct_f3463f58;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    float factor;
    float units;
} CDStruct_e5f4ed30;

typedef struct {
    int blendMode;
    double opacity;
} CDStruct_ce289cdd;

typedef struct {
    int _field1;
    int _field2;
    float _field3;
    int _field4;
    float _field5;
} CDStruct_8471daaf;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
} CDStruct_77932685;

typedef struct {
    int from;
    int to;
    long long fromDisplayStyle;
    long long toDisplayStyle;
    float fraction;
} CDStruct_cfeb8bef;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDStruct_183601bc *_field5;
} CDStruct_dde70fb6;

typedef struct {
    unsigned int _field1;
    float _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field6;
} CDStruct_e9f6a06b;

typedef struct {
    unsigned int _field1;
    int _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
    long long _field6;
    struct CVSMPTETime _field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_e50ab651;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    CDStruct_183601bc *_field6;
    CDStruct_183601bc *_field7;
} CDStruct_91f75a7f;

typedef struct {
    long long iconStyle;
    struct _VGLColor iconBadgeColor;
    struct _VGLColor iconGradientColor[2];
    struct _VGLColor iconBadgeLightColor;
    int iconBadgeLightBlendMode;
    struct _VGLColor iconGlyphColor;
    long long iconGlyphStyle;
    int iconGlyphBlendMode;
    float iconHaloSize;
    struct _VGLColor iconHaloColor;
    struct CGSize iconDropShadowOffset;
    float iconDropShadowSize;
    struct _VGLColor iconDropShadowColor;
    float iconCornerRadius;
    float iconBrightness;
    float iconBevelAmount;
    unsigned int iconSourceStyleAttributeKey;
} CDStruct_cf20f7af;

typedef struct {
    CDStruct_bb4da4be _field1;
    char *_field2;
    unsigned long long _field3;
} CDStruct_4c710163;

typedef struct {
    CDStruct_34734122 origin;
    CDStruct_8caa76fc size;
} CDStruct_02837cd9;

typedef struct {
    CDStruct_58ec0031 _color;
    float _offsetX;
    float _offsetY;
    float _size;
    struct {
        unsigned int offsetX:1;
        unsigned int offsetY:1;
    } _has;
} CDStruct_79d0722e;

typedef struct {
    CDStruct_58ec0031 _color;
    float _width;
} CDStruct_f43f0670;

typedef struct {
    CDStruct_03942939 _field1;
    Vec2Imp_1782d7e3 _field2;
    CDStruct_03942939 _field3;
} CDStruct_2066d242;

typedef struct {
    CDStruct_03942939 _field1;
    Vec2Imp_1782d7e3 _field2;
} CDStruct_3ef7eac3;

typedef struct {
    struct VKPoint position;
    double course;
    char onRoute;
} CDStruct_cc67e4ef;

typedef struct {
    struct VKPoint position;
    Vec3Imp_f658403c tangent;
    char tangentValid;
} CDStruct_87a99b1f;

typedef struct {
    struct VKPoint p;
    Vec3Imp_f658403c n;
} CDStruct_257eabe6;

typedef struct {
    double _field1;
    struct PolylineCoordinate _field2;
    struct VKPoint _field3;
    double _field4;
    double _field5;
    unsigned long long _field6;
    char _field7;
    struct {
        unsigned long long _field1;
        double _field2;
        struct PolylineCoordinate _field3;
        struct {
            double _field1;
            double _field2;
        } _field4;
    } _field8;
} CDStruct_b6e15a40;

typedef struct {
    CDStruct_bb4da4be _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    BRectImp_7721609a _field9;
    CDStruct_183601bc *_field10;
    struct {
        unsigned short _field1[2];
        unsigned short _field2[2];
    } _field11;
    unsigned char _field12;
} CDStruct_a537ee43;

typedef struct {
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
    } _field1;
    struct {
        unsigned int _field1;
        int _field2;
        float _field3;
        char _field4;
        char _field5;
        char _field6;
        char _field7;
        char _field8;
        struct {
            unsigned char _field1;
            unsigned short _field2;
        } _field9[16];
    } _field2;
} CDStruct_dab2d0bd;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double x0;
    double x1;
    double y0;
    double y1;
} CDStruct_aca18c62;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double width;
    double height;
} CDStruct_8caa76fc;

typedef struct {
    double x;
    double y;
} CDStruct_34734122;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct {
    float x0;
    float x1;
    float y0;
    float y1;
} CDStruct_ff03d24e;

typedef struct BRectImp<double> {
    struct Vec2Imp<double> p0;
    struct Vec2Imp<double> p1;
} BRectImp_d02b3a99;

typedef struct BRectImp<float> {
    Vec2Imp_1782d7e3 _field1;
    Vec2Imp_1782d7e3 _field2;
} BRectImp_7721609a;

typedef struct RoadPathElement<std::__1::shared_ptr<geo::MapEdge>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    shared_ptr_035a2da2 _field4;
    struct GeoPolyline _field5;
    int _field6;
} RoadPathElement_1a15aef6;

typedef struct Vec2Imp<float> {
    float x;
    float y;
} Vec2Imp_1782d7e3;

typedef struct Vec3Imp<double> {
    double x;
    double y;
    double z;
} Vec3Imp_f658403c;

typedef struct function<void (const vk::RoadPiece &)> {
    struct type _field1;
    struct __base<void (const vk::RoadPiece &)> *_field2;
} function_21f69ee7;

typedef struct set<std::__1::weak_ptr<vk::PointLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::PointLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::PointLabelFeature>>> {
    struct __tree<std::__1::weak_ptr<vk::PointLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::PointLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::PointLabelFeature>>> {
        struct __tree_node<std::__1::weak_ptr<vk::PointLabelFeature>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::weak_ptr<vk::PointLabelFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::owner_less<std::__1::weak_ptr<vk::PointLabelFeature>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_d0a7cc39;

typedef struct set<std::__1::weak_ptr<vk::RoadLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::RoadLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::RoadLabelFeature>>> {
    struct __tree<std::__1::weak_ptr<vk::RoadLabelFeature>, std::__1::owner_less<std::__1::weak_ptr<vk::RoadLabelFeature>>, vk_allocator<std::__1::weak_ptr<vk::RoadLabelFeature>>> {
        struct __tree_node<std::__1::weak_ptr<vk::RoadLabelFeature>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, vk_allocator<std::__1::__tree_node<std::__1::weak_ptr<vk::RoadLabelFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::owner_less<std::__1::weak_ptr<vk::RoadLabelFeature>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_4d79ca70;

typedef struct shared_ptr<geo::MapEdge> {
    struct MapEdge *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_035a2da2;

typedef struct shared_ptr<vk::Anchor> {
    struct Anchor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6f3fd3aa;

typedef struct shared_ptr<vk::AnchorContext> {
    struct AnchorContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4d0abf3b;

typedef struct shared_ptr<vk::AnchorFactory> {
    struct AnchorFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_00dc923b;

typedef struct shared_ptr<vk::InfoLabel> {
    struct InfoLabel *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0c41964b;

typedef struct shared_ptr<vk::InfoMapTile> {
    struct InfoMapTile *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a619b154;

typedef struct shared_ptr<vk::LabelManager> {
    struct LabelManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_dd1f7020;

typedef struct shared_ptr<vk::NavLabel> {
    struct NavLabel *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_338aa11d;

typedef struct shared_ptr<vk::ViewTransform> {
    struct ViewTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d1ecf7a2;

typedef struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, vk_allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>>> {
    struct __hash_table<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::equal_to<std::__1::basic_string<char>>, true>, vk_allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *>*> {
                struct __hash_node<std::__1::pair<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_52431100;

typedef struct unordered_map<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, vk_allocator<std::__1::pair<const unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>>> {
    struct __hash_table<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::equal_to<unsigned long>, true>, vk_allocator<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float>>>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_93d329bc;

typedef struct unordered_multimap<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, vk_allocator<std::__1::pair<const unsigned int, VKRibbonMultiPolylineSegment *>>> {
    struct __hash_table<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, std::__1::__unordered_map_hasher<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::equal_to<unsigned int>, true>, vk_allocator<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*[], std::__1::__bucket_list_deallocator<vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*>, vk_allocator<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, VKRibbonMultiPolylineSegment *, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_multimap_1962e1c9;

typedef struct vector<RouteJunctionInfo, vk_allocator<RouteJunctionInfo>> {
    struct RouteJunctionInfo *_field1;
    struct RouteJunctionInfo *_field2;
    struct __compressed_pair<RouteJunctionInfo *, vk_allocator<RouteJunctionInfo>> {
        struct RouteJunctionInfo *_field1;
    } _field3;
} vector_b376ae98;

typedef struct vector<VGLRect, vk_allocator<VGLRect>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VGLRect *, vk_allocator<VGLRect>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_3bee010d;

typedef struct vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>> {
    struct DiscontinuityEdgeInfo **_field1;
    struct DiscontinuityEdgeInfo **_field2;
    struct __compressed_pair<const vk::DiscontinuityEdgeInfo **, vk_allocator<const vk::DiscontinuityEdgeInfo *>> {
        struct DiscontinuityEdgeInfo **_field1;
    } _field3;
} vector_9adfa044;

typedef struct vector<geo::Vec2Imp<double>, vk_allocator<geo::Vec2Imp<double>>> {
    struct Vec2Imp<double> *__begin_;
    struct Vec2Imp<double> *__end_;
    struct __compressed_pair<geo::Vec2Imp<double>*, vk_allocator<geo::Vec2Imp<double>>> {
        struct Vec2Imp<double> *__first_;
    } __end_cap_;
} vector_d5845d09;

typedef struct vector<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>, vk_allocator<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>>> {
    struct pair<unsigned int, VKRibbonMultiPolylineSegment *> *__begin_;
    struct pair<unsigned int, VKRibbonMultiPolylineSegment *> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>*, vk_allocator<std::__1::pair<unsigned int, VKRibbonMultiPolylineSegment *>>> {
        struct pair<unsigned int, VKRibbonMultiPolylineSegment *> *__first_;
    } __end_cap_;
} vector_012c76ef;

typedef struct vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel>>> {
    shared_ptr_338aa11d *__begin_;
    shared_ptr_338aa11d *__end_;
    struct __compressed_pair<std::__1::shared_ptr<vk::NavLabel>*, vk_allocator<std::__1::shared_ptr<vk::NavLabel>>> {
        shared_ptr_338aa11d *__first_;
    } __end_cap_;
} vector_a3d7a989;

typedef struct vector<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>, vk_allocator<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>>> {
    struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> *__begin_;
    struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> *__end_;
    struct __compressed_pair<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>*, vk_allocator<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>>>> {
        struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> *__first_;
    } __end_cap_;
} vector_f457f7ad;

typedef struct vector<unsigned long, vk_allocator<unsigned long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long *, vk_allocator<unsigned long>> {
        unsigned long long *_field1;
    } _field3;
} vector_a3ee659f;

typedef struct vector<vk::TileExclusionArea, std::__1::allocator<vk::TileExclusionArea>> {
    struct TileExclusionArea *__begin_;
    struct TileExclusionArea *__end_;
    struct __compressed_pair<vk::TileExclusionArea *, std::__1::allocator<vk::TileExclusionArea>> {
        struct TileExclusionArea *__first_;
    } __end_cap_;
} vector_a2f7343e;

#pragma mark Named Unions

#if 0
// Names with conflicting types:
typedef union {
    struct VKProfileSparseRampValue {
        int value;
        unsigned char hi;
    } v[2];
    int *extra;
} _u_73374b6e;

typedef union {
    struct VKProfileSparseRampValue {
        long long value;
        unsigned char hi;
    } v[2];
    long long *extra;
} _u_a3a82b9c;

#endif

#pragma mark Typedef'd Unions

typedef union {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
} CDUnion_f5b85e25;

typedef union {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
    } _field1;
    float _field2[9];
} CDUnion_2b8b3256;

typedef union {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field1;
    float _field2[2][2];
    float _field3[4];
} CDUnion_552b2134;

