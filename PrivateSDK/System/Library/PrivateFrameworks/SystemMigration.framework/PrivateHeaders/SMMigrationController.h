//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SMSizingDelegate.h"

@class NSArray, NSMutableArray, NSPredicate, NSString, NSTimer, SMMigrationRequest, SMViewController;

@interface SMMigrationController : NSObject <SMSizingDelegate>
{
    int migrateMode;
    BOOL migrationInProgress;
    NSMutableArray *validSystems;
    NSArray *selectedSystems;
    SMMigrationRequest *request;
    id <SysMigServerRequests> _toolConnection;
    BOOL checkTool;
    NSArray *systemSortDescriptors;
    NSPredicate *_displaySystemsFilter;
    SMViewController *_connectOtherServerSheet;
    NSString *_connectOtherServer;
    NSString *_connectOtherServerStatus;
    BOOL _allowConnectOther;
    BOOL _showLookingForMacs;
    unsigned long long maxDisplaySystems;
    NSTimer *_displayThrottleTimer;
}

+ (id)keyPathsForValuesAffectingDisplaySystems;
@property(retain) NSTimer *displayThrottleTimer; // @synthesize displayThrottleTimer=_displayThrottleTimer;
@property BOOL showLookingForMacs; // @synthesize showLookingForMacs=_showLookingForMacs;
@property BOOL allowConnectOther; // @synthesize allowConnectOther=_allowConnectOther;
@property(retain) NSString *connectOtherServerStatus; // @synthesize connectOtherServerStatus=_connectOtherServerStatus;
@property(retain) NSString *connectOtherServer; // @synthesize connectOtherServer=_connectOtherServer;
@property(retain) SMViewController *connectOtherServerSheet; // @synthesize connectOtherServerSheet=_connectOtherServerSheet;
@property(retain) NSPredicate *displaySystemsFilter; // @synthesize displaySystemsFilter=_displaySystemsFilter;
@property(retain) NSArray *systemSortDescriptors; // @synthesize systemSortDescriptors;
@property BOOL migrationInProgress; // @synthesize migrationInProgress;
@property(retain) SMMigrationRequest *request; // @synthesize request;
@property(retain) NSMutableArray *validSystems; // @synthesize validSystems;
- (void)clickConnectOtherCancel;
- (void)clickConnectOtherOK;
- (void)displayConnectOtherShowMessage:(id)arg1;
- (void)connectOtherSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)startConnectOtherServersSheetForWindow:(id)arg1;
@property(readonly) NSArray *displaySystems;
- (void)releaseSystemAssertions;
- (id)incompatibleAppDataForSystemAtURL:(id)arg1;
- (id)logItems;
- (id)sizeForFileGroupingForPath:(id)arg1 onSourceSystemUrl:(id)arg2 andDestinationSystemUrl:(id)arg3;
- (id)userDataStores;
- (id)getUserWithUUID:(id)arg1 onSystem:(id)arg2;
- (void)sizeAllUsersForSystem:(id)arg1 sizeFileVaultUsers:(BOOL)arg2;
- (id)getAllUsersForSystem:(id)arg1;
- (int)checkUserCollisionOnSystem:(id)arg1 withNewName:(id)arg2 andNewLongName:(id)arg3 conflictedUID:(unsigned int *)arg4 mayReplace:(char *)arg5;
- (void)removeKnownSystem:(id)arg1;
- (void)addNonBonjourRemoteShare:(id)arg1;
- (void)unmountRemoteTMSharesExcluding:(id)arg1;
- (void)unmountAllRemoteTMShares;
- (void)unmount:(id)arg1;
- (void)mount:(id)arg1 withCredentials:(id)arg2;
- (void)setTrustedPassCode:(id)arg1;
- (id)currentSystem;
- (void)stopListingSystems;
- (void)systemsChangeNotification:(id)arg1;
- (void)syncSystemsList;
- (void)startSearchingForValidSystems;
- (id)sourceSystem;
- (id)tdmSystem;
- (long long)usableTDMSystemsCount;
- (id)networkMigrationSharedSecret;
- (BOOL)outdatedNetworkMigrationClientsDiscovered;
- (void)deleteNetworkMigrationKeychain;
- (void)stopNetworkMigrationServer;
- (void)startNetworkMigrationServer;
- (void)resetMigration;
- (void)cancelMigration;
- (void)startMigrationForcingResume:(BOOL)arg1 withDelegate:(id)arg2;
- (BOOL)canResumePreviousMigrationRequest;
@property int migrateMode;
- (id)toolConnection;
- (void)dealloc;
- (void)increaseMaxSystems:(id)arg1;
- (id)init;
- (void)cancelXibalbaMigration;
- (void)startXibalbaMigrationWithDelegate:(id)arg1;
- (void)cancelSizingForSystemAtURL:(id)arg1;
- (void)sizeDeferredComponentsForSystemAtURL:(id)arg1;
- (bycopy id)defenestratedLocalUsers;
- (bycopy id)systemProfileAtURL:(id)arg1;

@end

