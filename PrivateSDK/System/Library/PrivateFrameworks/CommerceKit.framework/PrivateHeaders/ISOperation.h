//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSOperation.h"

@class CKBag, NSError, NSLock, NSRunLoop, NSString, SSOperationProgress;

@interface ISOperation : NSOperation
{
    id _delegate;
    NSError *_error;
    NSLock *_lock;
    NSRunLoop *_operationRunLoop;
    ISOperation *_parentOperation;
    SSOperationProgress *_progress;
    BOOL _shouldMessageMainThread;
    ISOperation *_subOperation;
    BOOL _success;
    long long _threadPriority;
    id _threadSafeDelegate;
    void *_operationContext;
    id _xpcReplyObject;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _progressHandler;
    long long _requiredBagType;
}

+ (BOOL)copyAccountID:(id *)arg1 byAuthenticatingWithContext:(id)arg2 returningError:(id *)arg3;
+ (BOOL)copyAccountID:(id *)arg1 byAuthenticatingWithContext:(id)arg2 returningError:(id *)arg3 parentOperation:(id)arg4;
@property long long requiredBagType; // @synthesize requiredBagType=_requiredBagType;
@property(copy) CDUnknownBlockType progressHandler; // @synthesize progressHandler=_progressHandler;
@property(copy) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(readonly) id xpcReplyObject; // @synthesize xpcReplyObject=_xpcReplyObject;
@property void *operationContext; // @synthesize operationContext=_operationContext;
@property long long threadPriority; // @synthesize threadPriority=_threadPriority;
@property BOOL success; // @synthesize success=_success;
@property(retain) ISOperation *subOperation; // @synthesize subOperation=_subOperation;
@property(retain) ISOperation *parentOperation; // @synthesize parentOperation=_parentOperation;
@property(retain) NSRunLoop *operationRunLoop; // @synthesize operationRunLoop=_operationRunLoop;
@property(retain) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (BOOL)_loadRequredBagReturningError:(id *)arg1;
- (BOOL)_setThreadPriority:(long long)arg1 returningPreviousValue:(long long *)arg2;
- (void)_sendSuccessToDelegate;
- (void)_sendErrorToDelegate:(id)arg1;
- (void)_main:(BOOL)arg1;
- (void)_failAfterException;
- (void)unlock;
- (void)sendProgressToDelegate;
- (void)run:(BOOL)arg1;
- (void)lock;
- (void)main;
- (void)cancel;
@property(readonly, nonatomic) CKBag *bag;
@property(readonly) NSString *uniqueKey;
@property(readonly) id threadSafeDelegate;
@property BOOL shouldMessageMainThread;
@property __weak id <ISOperationDelegate> delegate;
- (void)stopRunLoop;
- (BOOL)runSubOperation:(id)arg1 returningError:(id *)arg2;
- (int)runRunLoopUntilStopped;
- (BOOL)runSyncReturningError:(id *)arg1;
- (void)run;
@property(readonly) double earlyTimeRemainingEstimate;
@property(readonly) long long progressWeight;
@property(readonly, nonatomic) SSOperationProgress *progress;
- (id)init;
- (BOOL)showDialogInSeperateProcessForOperation:(id)arg1;
- (BOOL)copyAccountID:(id *)arg1 byAuthenticatingWithContext:(id)arg2 returningError:(id *)arg3;
- (id)authenticatedAccountDSID;

@end

