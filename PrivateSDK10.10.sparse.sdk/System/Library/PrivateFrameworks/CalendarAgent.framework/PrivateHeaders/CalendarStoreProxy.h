/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <CalendarAgent/CalendarLinkProxy.h>

#import "CalendarStore-Protocol.h"

@interface CalendarStoreProxy : CalendarLinkProxy <CalendarStore>
{
}

+ (id)_defaultLocalCalendarAttachmentsBackupPath;
+ (BOOL)_calendarIsDefaultLocal:(id)arg1;
- (void)task:(id)arg1 isExchangeCompatibleWithReply:(id)arg2;
- (void)saveTask:(id)arg1 originatorProcessId:(int)arg2 withReply:(id)arg3;
- (void)removeTask:(id)arg1 originatorProcessId:(int)arg2 withReply:(id)arg3;
- (void)fetchTasksWithSharedUid:(id)arg1 withReply:(id)arg2;
- (void)fetchTasksWithPredicate:(id)arg1 inCalendars:(id)arg2 withReply:(id)arg3;
- (void)exchangeCompatibleTaskWithTask:(id)arg1 withCalendar:(id)arg2 originatorProcessId:(int)arg3 withReply:(id)arg4;
- (void)anyLocalRemindersExistWithReply:(id)arg1;
- (void)recurrenceRuleFromICSString:(id)arg1 withReply:(id)arg2;
- (void)saveGroup:(id)arg1 originatorProcessId:(int)arg2 withReply:(id)arg3;
- (void)removeGroup:(id)arg1 originatorProcessId:(int)arg2 withReply:(id)arg3;
- (void)mainPrincipalForAccount:(id)arg1 withReply:(id)arg2;
- (void)groupWithUid:(id)arg1 withReply:(id)arg2;
- (void)groupWithPrincipalUrl:(id)arg1 userName:(id)arg2 withReply:(id)arg3;
- (void)groupWithExchangeUrl:(id)arg1 externalURL:(id)arg2 userName:(id)arg3 emailAddress:(id)arg4 withReply:(id)arg5;
- (void)groupsWithReply:(id)arg1;
- (void)fetchPrincipalsWithPredicate:(id)arg1 withReply:(id)arg2;
- (void)saveEvent:(id)arg1 span:(int)arg2 originatorProcessId:(int)arg3 withReply:(id)arg4;
- (void)removeEvent:(id)arg1 span:(int)arg2 originatorProcessId:(int)arg3 withReply:(id)arg4;
- (void)fetchEventsWithSharedUid:(id)arg1 occurrence:(id)arg2 withReply:(id)arg3;
- (void)fetchEventsWithSharedUid:(id)arg1 withReply:(id)arg2;
- (void)fetchEventsWithPredicate:(id)arg1 inCalendars:(id)arg2 withReply:(id)arg3;
- (void)expandEvent:(id)arg1 fromDate:(id)arg2 toDate:(id)arg3 isInvitation:(BOOL)arg4 originalDuration:(double)arg5 withReply:(id)arg6;
- (void)eventWithItemId:(id)arg1 withReply:(id)arg2;
- (void)eventForRecurrenceException:(id)arg1 withReply:(id)arg2;
- (void)saveCalendar:(id)arg1 originatorProcessId:(int)arg2 withReply:(id)arg3;
- (void)removeCalendar:(id)arg1 originatorProcessId:(int)arg2 withReply:(id)arg3;
- (void)migrateLocalCalendarsToGroup:(id)arg1 originatorProcessId:(int)arg2 withReply:(id)arg3;
- (void)fetchLocalCalendarsWithPredicate:(id)arg1 withReply:(id)arg2;
- (void)fetchCalendarsWithPredicate:(id)arg1 withReply:(id)arg2;
- (void)defaultLocalCalendarAttachmentsBackupPathWithReply:(id)arg1;
- (void)calendarsForGroup:(id)arg1 withReply:(id)arg2;
- (void)calendar:(id)arg1 hasCapability:(int)arg2 reply:(id)arg3;
- (void)anyLocalCalendarsExistWithReply:(id)arg1;
- (void)anyLocalCalendarHasAttachmentsWithReply:(id)arg1;
- (void)activeCalendarWithReply:(id)arg1;
- (void)setPassword:(id)arg1 forAccount:(id)arg2 withReply:(id)arg3;
- (void)passwordForAccount:(id)arg1 withReply:(id)arg2;
- (void)remoteManagedObjectWithObjectId:(id)arg1 withReply:(id)arg2;
- (void)nodeWithUid:(id)arg1 withReply:(id)arg2;
- (void)setupCalendarPersistenceWithReply:(id)arg1;
- (void)setCurrentTimeZone:(id)arg1;
- (void)notifyAccountsChangedExternally;
- (void)isPluginId:(id)arg1 supportedForApp:(id)arg2 withReply:(id)arg3;
- (void)dateWithGMT:(id)arg1 withReply:(id)arg2;
- (void)date:(id)arg1 withTimeZone:(id)arg2 withReply:(id)arg3;
- (void)dateInTimeZone:(id)arg1 fromFloatingDateInGMT:(id)arg2 withReply:(id)arg3;
- (void)currentTimeZoneWithReply:(id)arg1;
- (void)CDVServerURLForURL:(id)arg1 withPath:(BOOL)arg2 withReply:(id)arg3;
- (BOOL)_saveLegacyEntity:(id)arg1 isNew:(BOOL)arg2 source:(id)arg3 inManagedObjectContext:(id)arg4 error:(id *)arg5;
- (id)originatorIdForPid:(int)arg1;
- (id)_fetchRemoteManagedObjects:(Class)arg1 withPredicate:(id)arg2 prefetchingKeyPaths:(id)arg3;
- (id)_createURLStringForServerURL:(id)arg1 removePath:(BOOL)arg2;
- (id)_calendarPredicateForCalendarIds:(id)arg1;

@end

