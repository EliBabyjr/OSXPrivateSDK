/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

@protocol WDXPCHelper
- (void)stopFrameCaptureWithAuthorizationData:(id)arg1 reply:(id)arg2;
- (void)startFrameCaptureWithDataLinkType:(long long)arg1 promiscuousMode:(BOOL)arg2 interfaceName:(id)arg3 authorizationData:(id)arg4 reply:(id)arg5;
- (void)startFrameCaptureInMonitorModeWithSaveFilePath:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(id)arg4;
- (void)setOpenDirectoryLoggingEnabled:(BOOL)arg1 authorizationData:(id)arg2 reply:(id)arg3;
- (void)queryOpenDirectoryLoggingEnabledWithAuthorizationData:(id)arg1 reply:(id)arg2;
- (void)setDNSLoggingEnabled:(BOOL)arg1 authorizationData:(id)arg2 reply:(id)arg3;
- (void)queryDNSLoggingEnabledWithAuthorizationData:(id)arg1 reply:(id)arg2;
- (void)setDHCPLoggingEnabled:(BOOL)arg1 authorizationData:(id)arg2 reply:(id)arg3;
- (void)queryDHCPLoggingEnabledWithAuthorizationData:(id)arg1 reply:(id)arg2;
- (void)setEAPOLLoggingEnabled:(BOOL)arg1 authorizationData:(id)arg2 reply:(id)arg3;
- (void)queryEAPOLLoggingEnabledWithAuthorizationData:(id)arg1 reply:(id)arg2;
- (void)setWiFiLoggingEnabled:(BOOL)arg1 authorizationData:(id)arg2 reply:(id)arg3;
- (void)queryWiFiLoggingEnabledWithAuthorizationData:(id)arg1 reply:(id)arg2;
- (void)configureIPv6AutomaticallyWithServiceID:(id)arg1 authorizationData:(id)arg2 reply:(id)arg3;
- (void)configureIPv6ManuallyWithIPAddress:(id)arg1 router:(id)arg2 prefixLength:(id)arg3 serviceID:(id)arg4 authorizationData:(id)arg5 reply:(id)arg6;
- (void)configureIPv4UsingDHCPWithServiceID:(id)arg1 authorizationData:(id)arg2 reply:(id)arg3;
- (void)configureIPv4ManuallyWithIPAddress:(id)arg1 routerAddress:(id)arg2 subnetMask:(id)arg3 serviceID:(id)arg4 authorizationData:(id)arg5 reply:(id)arg6;
- (void)setDNSServerAddresses:(id)arg1 searchDomains:(id)arg2 serviceID:(id)arg3 authorizationData:(id)arg4 reply:(id)arg5;
- (void)createBasicDiagnosticsReportUsingTemporaryDirectory:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(id)arg4;
- (void)createDiagnosticsReportUsingTemporaryDirectory:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(id)arg4;
- (void)createMiniDiagnosticsReportUsingTemporaryDirectory:(id)arg1 interfaceName:(id)arg2 authorizationData:(id)arg3 reply:(id)arg4;
- (void)setEventSubscriptions:(unsigned long long)arg1 reply:(id)arg2;
- (void)queryEventSubscriptionsWithReply:(id)arg1;
@end

